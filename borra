diff --git a/build/build.js b/build/build.js
index 690c7d4..e4d2e58 100644
--- a/build/build.js
+++ b/build/build.js
@@ -93,7 +93,7 @@
 /*! no static exports found */
 /***/ (function(module, exports, __webpack_require__) {
 
-eval("exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n  \\n  .error-line {\\n    stroke:black;\\n    stroke-dasharray: 2,2;\\n  }\\n  \\n  .error-cap {\\n    stroke:black;\\n    stroke-width: 1px;\\n  }\\n  \\n    div.benchmark_tooltip {\\n      background-color: #fff;\\n      padding: 7px;\\n      text-shadow: #f5f5f5 0 1px 0;\\n      font: 15px Helvetica Neue;\\n      border: 4.5px solid;\\n      border-color: #0A58A2;\\n      border-radius: 3px;\\n      opacity: 0.95;\\n      position: absolute;\\n      box-shadow: rgba(0, 0, 0, 0.3) 0 10px 15px;\\n    }\\n  \\n  .benchmark_tooltip:after {\\n      content: \\\" \\\";\\n      position: absolute;\\n      top: 50%;\\n      right: 100%;\\n      margin-top: -10px;\\n      border-width: 10px;\\n      border-style: solid;\\n      border-color: transparent transparent transparent transparent;\\n      \\n  }\\n  \\n   .plot-bg {\\n     fill:#F8F8F8;\\n     stroke: black;\\n   }\\n      \\n   .axis path,\\n   .axis line {\\n       fill: none;\\n       stroke: grey;\\n       stroke-width: 1;\\n       shape-rendering: crispEdges;\\n   }\\n\\n   .bench_grid {\\n    stroke-opacity: 0.1;\\n    stroke-dasharray: 7,5;\\n  }\\n\\n    \\n    .classificators_list{\\n        background-color: #0A58A2; \\n        border-radius: 8px;\\n        color: #fff;\\n        font-size: 20px;\\n        padding-left: 55px;\\n        padding-right: 55px;\\n        text-align: center;\\n    \\n        }\\n    \\n    .classificators_list:hover {\\n        background-color: #b3cde0;\\n    \\n    }\\n\\n    .benchmarkingTable td {\\n        border: 2px solid black;\\n        border-collapse: collapse;\\n        text-align: center;\\n    }\\n\\n    .benchmarkingTable {\\n        width: 300px; \\n        border-collapse: collapse; \\n        background-color: #f0f0f0;\\n        border: 5px solid black; \\n        float: right;\\n    }\\n\\n    /* .benchmarkingChart{\\n\\n        -webkit-transform:scale(0.5);\\n        -moz-transform:scale(0.5);\\n        -ms-transform:scale(0.5);\\n        transform:scale(0.5,  1);\\n        position: fixed;\\n        left: 0px;\\n        right: 0px;\\n        top: 0px;\\n        bottom: 0px;\\n    } */\\n      .axis--x {\\n          font-size: 12px;\\n      }\\n\\n      .axis--y {\\n        font-size: 12px;\\n    }\\n\\n    .removal_alert {\\n        padding: 10px;\\n        background-color: #ffcccc;\\n        color: #D10000;\\n    }\\n    \\n    .closebtn {\\n        margin-left: 15px;\\n        color: #D10000;\\n        font-weight: bold;\\n        float: right;\\n        font-size: 22px;\\n        line-height: 20px;\\n        cursor: pointer;\\n        transition: 0.3s;\\n    }\\n    \\n    .closebtn:hover {\\n        color: white;\\n    }\", \"\"]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8hLi9zcmMvYXBwLmNzcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9hcHAuY3NzPzg4ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJcXG4gIFxcbiAgLmVycm9yLWxpbmUge1xcbiAgICBzdHJva2U6YmxhY2s7XFxuICAgIHN0cm9rZS1kYXNoYXJyYXk6IDIsMjtcXG4gIH1cXG4gIFxcbiAgLmVycm9yLWNhcCB7XFxuICAgIHN0cm9rZTpibGFjaztcXG4gICAgc3Ryb2tlLXdpZHRoOiAxcHg7XFxuICB9XFxuICBcXG4gICAgZGl2LmJlbmNobWFya190b29sdGlwIHtcXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgICAgIHBhZGRpbmc6IDdweDtcXG4gICAgICB0ZXh0LXNoYWRvdzogI2Y1ZjVmNSAwIDFweCAwO1xcbiAgICAgIGZvbnQ6IDE1cHggSGVsdmV0aWNhIE5ldWU7XFxuICAgICAgYm9yZGVyOiA0LjVweCBzb2xpZDtcXG4gICAgICBib3JkZXItY29sb3I6ICMwQTU4QTI7XFxuICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xcbiAgICAgIG9wYWNpdHk6IDAuOTU7XFxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICAgIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4zKSAwIDEwcHggMTVweDtcXG4gICAgfVxcbiAgXFxuICAuYmVuY2htYXJrX3Rvb2x0aXA6YWZ0ZXIge1xcbiAgICAgIGNvbnRlbnQ6IFxcXCIgXFxcIjtcXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgICAgdG9wOiA1MCU7XFxuICAgICAgcmlnaHQ6IDEwMCU7XFxuICAgICAgbWFyZ2luLXRvcDogLTEwcHg7XFxuICAgICAgYm9yZGVyLXdpZHRoOiAxMHB4O1xcbiAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XFxuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcXG4gICAgICBcXG4gIH1cXG4gIFxcbiAgIC5wbG90LWJnIHtcXG4gICAgIGZpbGw6I0Y4RjhGODtcXG4gICAgIHN0cm9rZTogYmxhY2s7XFxuICAgfVxcbiAgICAgIFxcbiAgIC5heGlzIHBhdGgsXFxuICAgLmF4aXMgbGluZSB7XFxuICAgICAgIGZpbGw6IG5vbmU7XFxuICAgICAgIHN0cm9rZTogZ3JleTtcXG4gICAgICAgc3Ryb2tlLXdpZHRoOiAxO1xcbiAgICAgICBzaGFwZS1yZW5kZXJpbmc6IGNyaXNwRWRnZXM7XFxuICAgfVxcblxcbiAgIC5iZW5jaF9ncmlkIHtcXG4gICAgc3Ryb2tlLW9wYWNpdHk6IDAuMTtcXG4gICAgc3Ryb2tlLWRhc2hhcnJheTogNyw1O1xcbiAgfVxcblxcbiAgICBcXG4gICAgLmNsYXNzaWZpY2F0b3JzX2xpc3R7XFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMEE1OEEyOyBcXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcXG4gICAgICAgIGNvbG9yOiAjZmZmO1xcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA1NXB4O1xcbiAgICAgICAgcGFkZGluZy1yaWdodDogNTVweDtcXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgXFxuICAgICAgICB9XFxuICAgIFxcbiAgICAuY2xhc3NpZmljYXRvcnNfbGlzdDpob3ZlciB7XFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjNjZGUwO1xcbiAgICBcXG4gICAgfVxcblxcbiAgICAuYmVuY2htYXJraW5nVGFibGUgdGQge1xcbiAgICAgICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XFxuICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICB9XFxuXFxuICAgIC5iZW5jaG1hcmtpbmdUYWJsZSB7XFxuICAgICAgICB3aWR0aDogMzAwcHg7IFxcbiAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgXFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xcbiAgICAgICAgYm9yZGVyOiA1cHggc29saWQgYmxhY2s7IFxcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xcbiAgICB9XFxuXFxuICAgIC8qIC5iZW5jaG1hcmtpbmdDaGFydHtcXG5cXG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDAuNSk7XFxuICAgICAgICAtbW96LXRyYW5zZm9ybTpzY2FsZSgwLjUpO1xcbiAgICAgICAgLW1zLXRyYW5zZm9ybTpzY2FsZSgwLjUpO1xcbiAgICAgICAgdHJhbnNmb3JtOnNjYWxlKDAuNSwgIDEpO1xcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICAgICAgbGVmdDogMHB4O1xcbiAgICAgICAgcmlnaHQ6IDBweDtcXG4gICAgICAgIHRvcDogMHB4O1xcbiAgICAgICAgYm90dG9tOiAwcHg7XFxuICAgIH0gKi9cXG4gICAgICAuYXhpcy0teCB7XFxuICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcXG4gICAgICB9XFxuXFxuICAgICAgLmF4aXMtLXkge1xcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xcbiAgICB9XFxuXFxuICAgIC5yZW1vdmFsX2FsZXJ0IHtcXG4gICAgICAgIHBhZGRpbmc6IDEwcHg7XFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZjY2NjO1xcbiAgICAgICAgY29sb3I6ICNEMTAwMDA7XFxuICAgIH1cXG4gICAgXFxuICAgIC5jbG9zZWJ0biB7XFxuICAgICAgICBtYXJnaW4tbGVmdDogMTVweDtcXG4gICAgICAgIGNvbG9yOiAjRDEwMDAwO1xcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICAgICAgICBmbG9hdDogcmlnaHQ7XFxuICAgICAgICBmb250LXNpemU6IDIycHg7XFxuICAgICAgICBsaW5lLWhlaWdodDogMjBweDtcXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgICAgIHRyYW5zaXRpb246IDAuM3M7XFxuICAgIH1cXG4gICAgXFxuICAgIC5jbG9zZWJ0bjpob3ZlciB7XFxuICAgICAgICBjb2xvcjogd2hpdGU7XFxuICAgIH1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-loader/index.js?!./src/app.css\n");
+eval("exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n  \\n  .error-line {\\n    stroke:black;\\n    stroke-dasharray: 2,2;\\n  }\\n  \\n  .error-cap {\\n    stroke:black;\\n    stroke-width: 1px;\\n  }\\n  \\n    div.benchmark_tooltip {\\n      background-color: #fff;\\n      padding: 7px;\\n      text-shadow: #f5f5f5 0 1px 0;\\n      font: 15px Helvetica Neue;\\n      border: 4.5px solid;\\n      border-color: #0A58A2;\\n      border-radius: 3px;\\n      opacity: 0.95;\\n      position: absolute;\\n      box-shadow: rgba(0, 0, 0, 0.3) 0 10px 15px;\\n    }\\n  \\n  .benchmark_tooltip:after {\\n      content: \\\" \\\";\\n      position: absolute;\\n      top: 50%;\\n      right: 100%;\\n      margin-top: -10px;\\n      border-width: 10px;\\n      border-style: solid;\\n      border-color: transparent transparent transparent transparent;\\n      \\n  }\\n  \\n   .plot-bg {\\n     fill:#F8F8F8;\\n     stroke: black;\\n   }\\n      \\n   .axis path,\\n   .axis line {\\n       fill: none;\\n       stroke: grey;\\n       stroke-width: 1;\\n       shape-rendering: crispEdges;\\n   }\\n\\n   .bench_grid {\\n    stroke-opacity: 0.1;\\n    stroke-dasharray: 7,5;\\n  }\\n\\n    \\n    .classificators_list{\\n        background-color: #0A58A2; \\n        border-radius: 8px;\\n        color: #fff;\\n        font-size: 20px;\\n        padding-left: 55px;\\n        padding-right: 55px;\\n        text-align: center;\\n    \\n        }\\n    \\n    .classificators_list:hover {\\n        background-color: #b3cde0;\\n    \\n    }\\n\\n    .benchmarkingTable td {\\n        border: 2px solid black;\\n        border-collapse: collapse;\\n        text-align: center;\\n    }\\n\\n    .benchmarkingTable {\\n        width: 300px; \\n        border-collapse: collapse; \\n        background-color: #f0f0f0;\\n        border: 5px solid black; \\n        float: right;\\n    }\\n\\n    @media only screen and (max-width: 1400px) {\\n\\n        .benchmarkingChart{\\n            /* float: left; */\\n            width: 90vw;\\n        }\\n    }   \\n\\n\\n    /* .benchmarkingChart{\\n\\n        -webkit-transform:scale(0.5);\\n        -moz-transform:scale(0.5);\\n        -ms-transform:scale(0.5);\\n        transform:scale(0.5,  1);\\n        position: fixed;\\n        left: 0px;\\n        right: 0px;\\n        top: 0px;\\n        bottom: 0px;\\n    } */\\n      .axis--x {\\n          font-size: 12px;\\n      }\\n\\n      .axis--y {\\n        font-size: 12px;\\n    }\\n\\n    .removal_alert {\\n        padding: 10px;\\n        background-color: #ffcccc;\\n        color: #D10000;\\n    }\\n    \\n    .closebtn {\\n        margin-left: 15px;\\n        color: #D10000;\\n        font-weight: bold;\\n        float: right;\\n        font-size: 22px;\\n        line-height: 20px;\\n        cursor: pointer;\\n        transition: 0.3s;\\n    }\\n    \\n    .closebtn:hover {\\n        color: white;\\n    }\", \"\"]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8hLi9zcmMvYXBwLmNzcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9hcHAuY3NzPzg4ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJcXG4gIFxcbiAgLmVycm9yLWxpbmUge1xcbiAgICBzdHJva2U6YmxhY2s7XFxuICAgIHN0cm9rZS1kYXNoYXJyYXk6IDIsMjtcXG4gIH1cXG4gIFxcbiAgLmVycm9yLWNhcCB7XFxuICAgIHN0cm9rZTpibGFjaztcXG4gICAgc3Ryb2tlLXdpZHRoOiAxcHg7XFxuICB9XFxuICBcXG4gICAgZGl2LmJlbmNobWFya190b29sdGlwIHtcXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgICAgIHBhZGRpbmc6IDdweDtcXG4gICAgICB0ZXh0LXNoYWRvdzogI2Y1ZjVmNSAwIDFweCAwO1xcbiAgICAgIGZvbnQ6IDE1cHggSGVsdmV0aWNhIE5ldWU7XFxuICAgICAgYm9yZGVyOiA0LjVweCBzb2xpZDtcXG4gICAgICBib3JkZXItY29sb3I6ICMwQTU4QTI7XFxuICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xcbiAgICAgIG9wYWNpdHk6IDAuOTU7XFxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICAgIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4zKSAwIDEwcHggMTVweDtcXG4gICAgfVxcbiAgXFxuICAuYmVuY2htYXJrX3Rvb2x0aXA6YWZ0ZXIge1xcbiAgICAgIGNvbnRlbnQ6IFxcXCIgXFxcIjtcXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgICAgdG9wOiA1MCU7XFxuICAgICAgcmlnaHQ6IDEwMCU7XFxuICAgICAgbWFyZ2luLXRvcDogLTEwcHg7XFxuICAgICAgYm9yZGVyLXdpZHRoOiAxMHB4O1xcbiAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XFxuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcXG4gICAgICBcXG4gIH1cXG4gIFxcbiAgIC5wbG90LWJnIHtcXG4gICAgIGZpbGw6I0Y4RjhGODtcXG4gICAgIHN0cm9rZTogYmxhY2s7XFxuICAgfVxcbiAgICAgIFxcbiAgIC5heGlzIHBhdGgsXFxuICAgLmF4aXMgbGluZSB7XFxuICAgICAgIGZpbGw6IG5vbmU7XFxuICAgICAgIHN0cm9rZTogZ3JleTtcXG4gICAgICAgc3Ryb2tlLXdpZHRoOiAxO1xcbiAgICAgICBzaGFwZS1yZW5kZXJpbmc6IGNyaXNwRWRnZXM7XFxuICAgfVxcblxcbiAgIC5iZW5jaF9ncmlkIHtcXG4gICAgc3Ryb2tlLW9wYWNpdHk6IDAuMTtcXG4gICAgc3Ryb2tlLWRhc2hhcnJheTogNyw1O1xcbiAgfVxcblxcbiAgICBcXG4gICAgLmNsYXNzaWZpY2F0b3JzX2xpc3R7XFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMEE1OEEyOyBcXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcXG4gICAgICAgIGNvbG9yOiAjZmZmO1xcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA1NXB4O1xcbiAgICAgICAgcGFkZGluZy1yaWdodDogNTVweDtcXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgXFxuICAgICAgICB9XFxuICAgIFxcbiAgICAuY2xhc3NpZmljYXRvcnNfbGlzdDpob3ZlciB7XFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjNjZGUwO1xcbiAgICBcXG4gICAgfVxcblxcbiAgICAuYmVuY2htYXJraW5nVGFibGUgdGQge1xcbiAgICAgICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XFxuICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICB9XFxuXFxuICAgIC5iZW5jaG1hcmtpbmdUYWJsZSB7XFxuICAgICAgICB3aWR0aDogMzAwcHg7IFxcbiAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgXFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xcbiAgICAgICAgYm9yZGVyOiA1cHggc29saWQgYmxhY2s7IFxcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xcbiAgICB9XFxuXFxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTQwMHB4KSB7XFxuXFxuICAgICAgICAuYmVuY2htYXJraW5nQ2hhcnR7XFxuICAgICAgICAgICAgLyogZmxvYXQ6IGxlZnQ7ICovXFxuICAgICAgICAgICAgd2lkdGg6IDkwdnc7XFxuICAgICAgICB9XFxuICAgIH0gICBcXG5cXG5cXG4gICAgLyogLmJlbmNobWFya2luZ0NoYXJ0e1xcblxcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMC41KTtcXG4gICAgICAgIC1tb3otdHJhbnNmb3JtOnNjYWxlKDAuNSk7XFxuICAgICAgICAtbXMtdHJhbnNmb3JtOnNjYWxlKDAuNSk7XFxuICAgICAgICB0cmFuc2Zvcm06c2NhbGUoMC41LCAgMSk7XFxuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgICAgICBsZWZ0OiAwcHg7XFxuICAgICAgICByaWdodDogMHB4O1xcbiAgICAgICAgdG9wOiAwcHg7XFxuICAgICAgICBib3R0b206IDBweDtcXG4gICAgfSAqL1xcbiAgICAgIC5heGlzLS14IHtcXG4gICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xcbiAgICAgIH1cXG5cXG4gICAgICAuYXhpcy0teSB7XFxuICAgICAgICBmb250LXNpemU6IDEycHg7XFxuICAgIH1cXG5cXG4gICAgLnJlbW92YWxfYWxlcnQge1xcbiAgICAgICAgcGFkZGluZzogMTBweDtcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmNjY2M7XFxuICAgICAgICBjb2xvcjogI0QxMDAwMDtcXG4gICAgfVxcbiAgICBcXG4gICAgLmNsb3NlYnRuIHtcXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxNXB4O1xcbiAgICAgICAgY29sb3I6ICNEMTAwMDA7XFxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcXG4gICAgICAgIGZsb2F0OiByaWdodDtcXG4gICAgICAgIGZvbnQtc2l6ZTogMjJweDtcXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICAgICAgdHJhbnNpdGlvbjogMC4zcztcXG4gICAgfVxcbiAgICBcXG4gICAgLmNsb3NlYnRuOmhvdmVyIHtcXG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcXG4gICAgfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-loader/index.js?!./src/app.css\n");
 
 /***/ }),
 
@@ -6191,6 +6191,18 @@ eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQ
 
 /***/ }),
 
+/***/ "./node_modules/pareto-frontier/index.js":
+/*!***********************************************!*\
+  !*** ./node_modules/pareto-frontier/index.js ***!
+  \***********************************************/
+/*! no static exports found */
+/***/ (function(module, exports, __webpack_require__) {
+
+"use strict";
+eval("\n\nconst pointComparators = Object.freeze({\n    topRight:    (a, b) => (b[0] < a[0] ? -1 : (b[0] > a[0] ? 1 : (b[1] < a[1] ? -1 : (b[1] > a[1] ? 1 : 0)))),\n    topLeft:     (a, b) => (a[0] < b[0] ? -1 : (a[0] > b[0] ? 1 : (a[1] < b[1] ? 1 : (a[1] > b[1] ? -1 : 0)))),\n    bottomRight: (a, b) => (b[0] < a[0] ? -1 : (b[0] > a[0] ? 1 : (b[1] < a[1] ? 1 : (b[1] > a[1] ? -1 : 0)))),\n    bottomLeft:  (a, b) => (a[0] < b[0] ? -1 : (a[0] > b[0] ? 1 : (a[1] < b[1] ? -1 : (a[1] > b[1] ? 1 : 0)))),\n});\n\nconst getParetoFrontier = (points, options) => {\n    if (!Array.isArray(points) || !points.every(p => Array.isArray(p) && p.length >= 2)) { throw new TypeError('Require array of points as input'); }\n\n    const pointComparator = options && pointComparators[options.optimize] || pointComparators.topRight;\n    const findMax = (pointComparator([0, 1], [0, 0]) < 0); // Optimize +y\n\n    let last;\n    return Array.from(points).sort(pointComparator).filter((p, i) => {\n        if (i === 0 || findMax && p[1] > last || !findMax && p[1] < last) { last = p[1]; return true; }\n\n        return false;\n    });\n}\n\nexports.getParetoFrontier = getParetoFrontier;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcGFyZXRvLWZyb250aWVyL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BhcmV0by1mcm9udGllci9pbmRleC5qcz9kYWY1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgcG9pbnRDb21wYXJhdG9ycyA9IE9iamVjdC5mcmVlemUoe1xuICAgIHRvcFJpZ2h0OiAgICAoYSwgYikgPT4gKGJbMF0gPCBhWzBdID8gLTEgOiAoYlswXSA+IGFbMF0gPyAxIDogKGJbMV0gPCBhWzFdID8gLTEgOiAoYlsxXSA+IGFbMV0gPyAxIDogMCkpKSksXG4gICAgdG9wTGVmdDogICAgIChhLCBiKSA9PiAoYVswXSA8IGJbMF0gPyAtMSA6IChhWzBdID4gYlswXSA/IDEgOiAoYVsxXSA8IGJbMV0gPyAxIDogKGFbMV0gPiBiWzFdID8gLTEgOiAwKSkpKSxcbiAgICBib3R0b21SaWdodDogKGEsIGIpID0+IChiWzBdIDwgYVswXSA/IC0xIDogKGJbMF0gPiBhWzBdID8gMSA6IChiWzFdIDwgYVsxXSA/IDEgOiAoYlsxXSA+IGFbMV0gPyAtMSA6IDApKSkpLFxuICAgIGJvdHRvbUxlZnQ6ICAoYSwgYikgPT4gKGFbMF0gPCBiWzBdID8gLTEgOiAoYVswXSA+IGJbMF0gPyAxIDogKGFbMV0gPCBiWzFdID8gLTEgOiAoYVsxXSA+IGJbMV0gPyAxIDogMCkpKSksXG59KTtcblxuY29uc3QgZ2V0UGFyZXRvRnJvbnRpZXIgPSAocG9pbnRzLCBvcHRpb25zKSA9PiB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHBvaW50cykgfHwgIXBvaW50cy5ldmVyeShwID0+IEFycmF5LmlzQXJyYXkocCkgJiYgcC5sZW5ndGggPj0gMikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcignUmVxdWlyZSBhcnJheSBvZiBwb2ludHMgYXMgaW5wdXQnKTsgfVxuXG4gICAgY29uc3QgcG9pbnRDb21wYXJhdG9yID0gb3B0aW9ucyAmJiBwb2ludENvbXBhcmF0b3JzW29wdGlvbnMub3B0aW1pemVdIHx8IHBvaW50Q29tcGFyYXRvcnMudG9wUmlnaHQ7XG4gICAgY29uc3QgZmluZE1heCA9IChwb2ludENvbXBhcmF0b3IoWzAsIDFdLCBbMCwgMF0pIDwgMCk7IC8vIE9wdGltaXplICt5XG5cbiAgICBsZXQgbGFzdDtcbiAgICByZXR1cm4gQXJyYXkuZnJvbShwb2ludHMpLnNvcnQocG9pbnRDb21wYXJhdG9yKS5maWx0ZXIoKHAsIGkpID0+IHtcbiAgICAgICAgaWYgKGkgPT09IDAgfHwgZmluZE1heCAmJiBwWzFdID4gbGFzdCB8fCAhZmluZE1heCAmJiBwWzFdIDwgbGFzdCkgeyBsYXN0ID0gcFsxXTsgcmV0dXJuIHRydWU7IH1cblxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSk7XG59XG5cbmV4cG9ydHMuZ2V0UGFyZXRvRnJvbnRpZXIgPSBnZXRQYXJldG9Gcm9udGllcjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/pareto-frontier/index.js\n");
+
+/***/ }),
+
 /***/ "./node_modules/style-loader/lib/addStyles.js":
 /*!****************************************************!*\
   !*** ./node_modules/style-loader/lib/addStyles.js ***!
@@ -6232,7 +6244,7 @@ eval("\nvar content = __webpack_require__(/*! !../node_modules/css-loader??ref--
 /***/ (function(module, __webpack_exports__, __webpack_require__) {
 
 "use strict";
-eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadurl\", function() { return loadurl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"onQuartileChange\", function() { return onQuartileChange; });\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ \"./node_modules/d3/index.js\");\n/* harmony import */ var _app_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./app.css */ \"./src/app.css\");\n/* harmony import */ var _app_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_app_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n\n// ./node_modules/.bin/webpack-cli src/app.js --output=build/build.js -d -w\n\n\nlet MAIN_DATA = {};\n\n\nfunction loadurl(){\n    let divid;\n    \n    let charts = document.getElementsByClassName(\"benchmarkingChart\");\n     \n    let i = 0;\n    let dataId;\n    let y;\n    \n    // append ids to chart/s and make d3 plot\n    i = 0\n    for(y of charts){\n      // get benchmarking event id\n      dataId = y.getAttribute('data-id');\n      //set chart id\n      divid = (dataId+i).replace(\":\",\"_\");\n      y.id=divid;\n\n      // append buttons\n      let button1_id = divid + \"__none\";\n      let button2_id = divid + \"__squares\";\n      let button3_id = divid + \"__diagonals\";\n      \n      // append selection list tooltip container\n      d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"]('#'+divid).append(\"div\")\n        .attr(\"id\", \"tooltip_container\")\n\n      let select_list = d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"]('#'+divid).append(\"form\").append(\"select\")\n      .attr(\"class\",\"classificators_list\")\n      .attr(\"id\",divid + \"_dropdown_list\")\n      .append(\"optgroup\")\n      .attr(\"label\",\"Select a classification method:\");\n\n      select_list.append(\"option\")\n      .attr(\"class\", \"selection_option\")\n      .attr(\"id\", button1_id)\n      .attr(\"title\", \"Show only raw data\")\n      .attr(\"selected\",\"disabled\")\n      .attr(\"data-toggle\", \"list_tooltip\")\n      .attr(\"data-container\", \"#tooltip_container\") \n      .text(\"NO CLASSIFICATION\")\n      .on('click', function(d) {\n        onQuartileChange(this.id);\n      });\n      select_list.append(\"option\")\n      .attr(\"class\", \"selection_option\")\n      .attr(\"id\", button2_id)\n      .attr(\"title\", \"Apply square quartiles classification method (based on the 0.5 quartile of the X and Y metrics)\")\n      .attr(\"data-toggle\", \"list_tooltip\")\n      .attr(\"data-container\", \"#tooltip_container\") \n      .text(\"SQUARE QUARTILES\")\n      .on('click', function(d) {\n        onQuartileChange(this.id);\n      });\n      select_list.append(\"option\")\n      .attr(\"class\", \"selection_option\")\n      .attr(\"id\", button3_id)\n      .attr(\"title\", \"Apply diagonal quartiles classifcation method (based on the assignment of a score to each participant proceeding from its distance to the 'optimal performance' corner)\")\n      .attr(\"data-toggle\", \"list_tooltip\")\n      .attr(\"data-container\", \"#tooltip_container\") \n      .text(\"DIAGONAL QUARTILES\")\n      .on('click', function(d) {\n        onQuartileChange(this.id);\n      });\n     \n      let url = \"https://dev-openebench.bsc.es/api/scientific/Dataset/?query=\" + dataId + \"&fmt=json\";\n      get_data(url,divid); \n\n      // $('[data-toggle=\"list_tooltip\"]').tooltip();\n\n      //check the transformation to table attribute and append table to html\n      if (y.getAttribute('toTable') == \"true\"){\n        let table_id = divid + \"_table\";\n        var input = jquery__WEBPACK_IMPORTED_MODULE_2___default()('<br><br><table id=\"'+table_id+'\" data-id=\"'+dataId+'\" class=\"benchmarkingTable\"></table>');\n        jquery__WEBPACK_IMPORTED_MODULE_2___default()(\"#\" + divid).append(input);\n      };\n            \n      i++;\n    }\n        \n    \n       \n};\n\n\n\nfunction get_data(url,divid){\n\n  fetchUrl(url).then(results => {\n    join_all_json(results.Dataset,divid);\n  })\n\n};\n\nasync function fetchUrl(url) {\n\n  try {\n    let request = await fetch(url);\n    let result = await request.text();\n      return JSON.parse(result);\n    }\n    catch (err) {\n      console.log(`Invalid Url Error: ${err.stack} `);\n    }\n\n};\n\nfunction join_all_json(array,divid){\n  try{\n    let full_json  = [];\n    for (let i = 0; i < array.length; i++) {\n        let jo = {};\n        jo['toolname'] = array[i].name.split('.')[0];\n        jo['x'] = array[i].metrics[0].result.value;\n        jo['y'] = array[i].metrics[1].result.value;\n        jo['e'] = array[i].metrics[2].result.value;\n        full_json.push(jo);    \n    }\n\n    MAIN_DATA[divid] = full_json;\n    // by default, no classification method is applied. it is the first item in the selection list\n    var e = document.getElementById(divid + \"_dropdown_list\");\n    let classification_type = e.options[e.selectedIndex].id;\n\n    createChart(full_json,divid, classification_type);\n  }catch(err){\n    console.log(`Invalid Url Error: ${err.stack} `);\n  }\n\n    \n};\n\nfunction onQuartileChange(ID){  \n  \n  var chart_id = ID.split(\"__\")[0];\n  // console.log(d3.select('#'+'svg_'+chart_id));\n  d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"]('#'+'svg_'+chart_id).remove();\n  let classification_type = ID;\n  createChart(MAIN_DATA[chart_id],chart_id, classification_type);\n};\n\nfunction compute_classification(data, svg, xScale, yScale, div, width, height, removed_tools,divid, classification_type) {\n\n  let transform_to_table; //this variable is set to true if there are table elements with the corresponden divid in the html file\n  // every time a new classification is compute the previous results table is deleted (if it exists)\n  if (document.getElementById(divid + \"_table\") != null) {\n    document.getElementById(divid + \"_table\").innerHTML = '';\n    transform_to_table = true;\n  };\n\n  let better = \"bottom-right\";\n  if (classification_type == ( divid + \"__squares\")) {\n    get_square_quartiles(data, svg, xScale, yScale, div, removed_tools,better,divid, transform_to_table);\n    append_quartile_numbers_to_plot (svg, xScale, yScale, better,divid);\n  }  \n  else if (classification_type == (divid + \"__diagonals\")) {\n    get_diagonal_quartiles(data, svg, xScale, yScale, div, width, height, removed_tools, better,divid, transform_to_table);\n  } \n  \n};\n\nfunction compute_chart_height(data){\n\n  if (data.length%5 == 0){\n    return (40 + (20 * (Math.trunc(data.length/5))));\n  } else if (data.lenght%5 != 0) {\n    return (40 + (20 * (Math.trunc(data.length/5)+1)));\n  } \n  \n};\n\nfunction createChart (data,divid, classification_type){\n  // console.log(data)\n  let margin = {top: 20, right: 40, bottom: compute_chart_height(data), left: 40},\n    width = 1200 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n\n  let xScale = d3__WEBPACK_IMPORTED_MODULE_0__[\"scaleLinear\"]()\n    .range([0, width])\n    .domain([d3__WEBPACK_IMPORTED_MODULE_0__[\"min\"](data, function(d) { return d.x; }), d3__WEBPACK_IMPORTED_MODULE_0__[\"max\"](data, function(d) { return d.x; })]).nice();\n\n  let min_y = d3__WEBPACK_IMPORTED_MODULE_0__[\"min\"](data, function(d) { return d.y; });\n  let max_y = d3__WEBPACK_IMPORTED_MODULE_0__[\"max\"](data, function(d) { return d.y; });\n  let yScale = d3__WEBPACK_IMPORTED_MODULE_0__[\"scaleLinear\"]()\n    .range([height, 0])\n    .domain([min_y - 0.3*(max_y-min_y), max_y + 0.3*(max_y-min_y)]).nice();\n\n  let xAxis = d3__WEBPACK_IMPORTED_MODULE_0__[\"axisBottom\"](xScale).ticks(12),\n      yAxis = d3__WEBPACK_IMPORTED_MODULE_0__[\"axisLeft\"](yScale).ticks(12 * height / width);\n\n  let line = d3__WEBPACK_IMPORTED_MODULE_0__[\"line\"]()\n    .x(function(d) {\n      return xScale(d.x);\n    })\n    .y(function(d) {\n      return yScale(d.y);\n    });\n\n  // Define the div for the tooltip\n\n  let div = d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"]('#'+divid).append(\"div\").attr(\"class\", \"benchmark_tooltip\").style(\"opacity\", 0);\n\n  // append the svg element\n  // d3.select(\"svg\").remove()\n    // console.log(d3.select(\"svg\").remove());\n\n  let svg = d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"]('#'+divid).append(\"svg\")\n    .attr(\"class\", \"benchmarkingSVG\")\n    .attr('id','svg_'+divid)\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n  svg.append(\"g\").append(\"rect\").attr(\"width\", width).attr(\"height\", height).attr(\"class\", \"plot-bg\");\n\n  // Add Axis labels\n  svg.append(\"g\").attr(\"class\", \"axis axis--x\")\n    .attr(\"transform\", \"translate(\" + 0 + \",\" + height + \")\")\n    .call(xAxis);\n\n  svg.append(\"g\").attr(\"class\", \"axis axis--y\").call(yAxis);\n  \n  // add X and Y Gridlines\n  var gridlines_x = d3__WEBPACK_IMPORTED_MODULE_0__[\"axisBottom\"]()\n                    .ticks(12)\n                    .tickFormat(\"\")\n                    .tickSize(height)\n                    .scale(xScale);\n\n  var gridlines_y = d3__WEBPACK_IMPORTED_MODULE_0__[\"axisLeft\"]()\n                    .ticks(12 * height / width)\n                    .tickFormat(\"\")\n                    .tickSize(-width)\n                    .scale(yScale);\n\n  svg.append(\"g\")\n     .attr(\"class\", \"bench_grid\")\n     .call(gridlines_x);\n  \n     svg.append(\"g\")\n     .attr(\"class\", \"bench_grid\")\n     .call(gridlines_y);\n         \n  let removed_tools = []; // this array stores the tools when the user clicks on them\n\n   // setup fill color\n  let cValue_func = function(d) {\n    return d.toolname;\n  },\n  color_func = d3__WEBPACK_IMPORTED_MODULE_0__[\"scaleOrdinal\"](d3__WEBPACK_IMPORTED_MODULE_0__[\"schemeSet1\"].concat(d3__WEBPACK_IMPORTED_MODULE_0__[\"schemeSet3\"]));\n\n  append_dots_errobars (svg, data, xScale, yScale, div, cValue_func, color_func,divid);\n\n  draw_legend (data, svg, xScale, yScale, div, width, height, removed_tools, color_func, color_func.domain(), margin,divid,classification_type);\n\n  compute_classification(data, svg, xScale, yScale, div, width, height, removed_tools,divid, classification_type);\n\n};\n\nfunction append_dots_errobars (svg, data, xScale, yScale, div, cValue, color,divid){\n\n  // Add Error Line\n  svg.append(\"g\").selectAll(\"line\")\n      .data(data).enter()\n      .append(\"line\")\n      .attr(\"class\", \"error-line\")\n      .attr(\"id\", function (d) { return divid+\"___line\"+d.toolname.replace(/[\\. ()/-]/g, \"_\");})\n      .attr(\"x1\", function(d) {\n        return xScale(d.x);\n      })\n      .attr(\"y1\", function(d) {\n        return yScale(d.y + d.e);\n      })\n      .attr(\"x2\", function(d) {\n        return xScale(d.x);\n      })\n      .attr(\"y2\", function(d) {\n        return yScale(d.y - d.e);\n      });\n\n  // Add Error Top Cap\n  svg.append(\"g\").selectAll(\"line\")\n      .data(data).enter()\n      .append(\"line\")\n      .attr(\"id\", function (d) { return divid+\"___top\"+d.toolname.replace(/[\\. ()/-]/g, \"_\");})\n      .attr(\"class\", \"error-cap\")\n      .attr(\"x1\", function(d) {\n        return xScale(d.x) - 4;\n      })\n      .attr(\"y1\", function(d) {\n        return yScale(d.y + d.e);\n      })\n      .attr(\"x2\", function(d) {\n        return xScale(d.x) + 4;\n      })\n      .attr(\"y2\", function(d) {\n        return yScale(d.y + d.e);\n      });\n\n  // Add Error Bottom Cap\n  svg.append(\"g\").selectAll(\"line\")\n      .data(data).enter()\n      .append(\"line\")\n      .attr(\"id\", function (d) { return divid+\"___bottom\"+d.toolname.replace(/[\\. ()/-]/g, \"_\");})\n      .attr(\"class\", \"error-cap\")\n      .attr(\"x1\", function(d) {\n        return xScale(d.x) - 4;\n      })\n      .attr(\"y1\", function(d) {\n        return yScale(d.y - d.e);\n      })\n      .attr(\"x2\", function(d) {\n        return xScale(d.x) + 4;\n      })\n      .attr(\"y2\", function(d) {\n        return yScale(d.y - d.e);\n      });\n\n  // add dots\n  let symbol = d3__WEBPACK_IMPORTED_MODULE_0__[\"symbol\"]();\n\n  let formatComma = d3__WEBPACK_IMPORTED_MODULE_0__[\"format\"](\",\");\n  let formatDecimal = d3__WEBPACK_IMPORTED_MODULE_0__[\"format\"](\".4f\");\n\n  let dots =svg.selectAll(\".dots\")\n    .data(data)\n    .enter()\n    .append(\"path\")\n    .attr(\"class\", \"benchmark_path\");\n    \n  dots.attr(\"d\", symbol.type(function(){return d3__WEBPACK_IMPORTED_MODULE_0__[\"symbolSquare\"]}))\n      .attr(\"id\", function (d) {  return divid+\"___\"+d.toolname.replace(/[\\. ()/-]/g, \"_\");})\n      .attr(\"class\",\"line\")\n      .attr('transform',function(d){ return \"translate(\"+xScale(d.x)+\",\"+yScale(d.y)+\")\"; })\n      .attr(\"r\", 6)\n      .style(\"fill\", function(d) {\n        return color(cValue(d));\n      })\n      .on(\"mouseover\", function(d) {\n        // show tooltip only if the tool is visible\n        let ID = divid+\"___\"+d.toolname.replace(/[\\. ()/-]/g, \"_\");\n        if (d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+ID).style(\"opacity\") == 1) {\n          div.transition()\t\t\n              .duration(100)\t\t\n              .style(\"opacity\", .9);\t\t\n          div.html(d.toolname + \"<br/>\"  + formatComma(d.x) + \"<br/>\"  + formatDecimal(d.y))\t\n              .style(\"left\", (d3__WEBPACK_IMPORTED_MODULE_0__[\"event\"].pageX) + \"px\")\t\t\n              .style(\"top\", (d3__WEBPACK_IMPORTED_MODULE_0__[\"event\"].pageY) + \"px\");\n        }\n      })\t\t\t\t\t\n      .on(\"mouseout\", function(d) {\t\t\n        div.transition()\t\t\n          .duration(1500)\t\t\n          .style(\"opacity\", 0);\t\n      });\n    \n};\n\nfunction draw_legend (data, svg, xScale, yScale, div, width, height, removed_tools, color, color_domain, margin,divid,classification_type) {\n\n  //set number of elements per legend row\n  let n = 5;\n\n  let legend = svg.selectAll(\".legend\")\n    .data(color_domain)\n    .enter().append(\"g\")\n    .attr(\"class\", \"legend\")\n    .attr(\"transform\", function(d, i) { return \"translate(\" + (-width+i%n*200) + \",\" + (height + 40 + Math.floor(i/n) * 20) + \")\"; });\n  \n  // draw legend colored rectangles\n  legend.append(\"rect\")\n        .attr(\"x\", width + 18)\n        .attr(\"width\", 18)\n        .attr(\"height\", 18)\n        .style(\"fill\", color)\n        .on('click', function(d) {\n\n          let dot = d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"text#\" +divid+\"___\"+d.replace(/[\\. ()/-]/g, \"_\"));\n          let ID = dot._groups[0][0].id;\n\n          if(data.length-removed_tools.length-1 >= 4){\n\n            let legend_rect = this;\n            show_or_hide_participant_in_plot (ID, data, svg, xScale, yScale, div, width, height, removed_tools,divid,classification_type, legend_rect);\n\n          } else if (data.length-removed_tools.length-1 < 4 && (d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+ID).style(\"opacity\")) == 0){\n\n            let legend_rect = this;\n            show_or_hide_participant_in_plot (ID, data, svg, xScale, yScale, div, width, height, removed_tools,divid,classification_type, legend_rect);\n\n          } else {\n            \n            jquery__WEBPACK_IMPORTED_MODULE_2___default()('.removal_alert').remove();\n            var alert_msg = jquery__WEBPACK_IMPORTED_MODULE_2___default()('<div class=\"removal_alert\">\\\n                                <span class=\"closebtn\" onclick=\"(this.parentNode.remove());\">&times;</span>\\\n                                At least four participants are required for the benchmark!!\\\n                              </div>');\n            jquery__WEBPACK_IMPORTED_MODULE_2___default()(\"#\" + divid).append(alert_msg);\n\n            setTimeout(function(){\n              if (jquery__WEBPACK_IMPORTED_MODULE_2___default()('.removal_alert').length > 0) {\n                jquery__WEBPACK_IMPORTED_MODULE_2___default()('.removal_alert').remove();\n              }\n            }, 5000)\n\n          };\n\n        });\n\n  // draw legend text\n  legend.append(\"text\")\n        .attr(\"x\", width + 40)\n        .attr(\"y\", 9)\n        .attr(\"id\", function (d) { return divid+\"___\"+d.replace(/[\\. ()/-]/g, \"_\");})\n        .attr(\"dy\", \".35em\")\n        .style(\"text-anchor\", \"start\")\n        .text(function(d) {\n          return d;\n        });\n\n};\n\nfunction show_or_hide_participant_in_plot (ID, data, svg, xScale, yScale, div, width, height, removed_tools,divid,classification_type, legend_rect){\n\n   let tool_id =ID.split(\"___\")[1];\n  // remove the existing number and classification lines from plot (if any)\n  svg.selectAll(\"#\"+divid+\"___x_quartile\").remove();\n  svg.selectAll(\"#\"+divid+\"___y_quartile\").remove();\n  svg.selectAll(\"#\"+divid+\"___diag_quartile_0\").remove();\n  svg.selectAll(\"#\"+divid+\"___diag_quartile_1\").remove();\n  svg.selectAll(\"#\"+divid+\"___diag_quartile_2\").remove();\n  svg.selectAll(\"#\"+divid+\"___num_bottom_right\").remove();\n  svg.selectAll(\"#\"+divid+\"___num_top_right\").remove();\n  svg.selectAll(\"#\"+divid+\"___num_bottom_left\").remove();\n  svg.selectAll(\"#\"+divid+\"___num_top_left\").remove();\n  \n\n  let blockopacity = d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+ID).style(\"opacity\");\n  \n  // change the opacity to 0 or 1 depending on the current state\n  if (blockopacity == 0) {\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+ID).style(\"opacity\", 1);\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+divid+\"___top\"+tool_id).style(\"opacity\", 1);\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+divid+\"___bottom\"+tool_id).style(\"opacity\", 1);\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+divid+\"___line\"+tool_id).style(\"opacity\", 1);\n    // recalculate the quartiles after removing the tools\n    let index = jquery__WEBPACK_IMPORTED_MODULE_2___default.a.inArray(tool_id.replace(/_/g, \"-\"), removed_tools);\n    removed_tools.splice(index, 1);\n    compute_classification(data, svg, xScale, yScale, div, width, height, removed_tools,divid,classification_type);\n    //change the legend opacity to keep track of hidden tools\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](legend_rect).style(\"opacity\", 1);\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"text#\" +divid+\"___\"+tool_id).style(\"opacity\", 1);\n\n  } else {\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+ID).style(\"opacity\", 0);\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+divid+\"___top\"+tool_id).style(\"opacity\", 0);\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+divid+\"___bottom\"+tool_id).style(\"opacity\", 0);\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+divid+\"___line\"+tool_id).style(\"opacity\", 0);\n    removed_tools.push(tool_id.replace(/_/g, \"-\"));\n    compute_classification(data, svg, xScale, yScale, div, width, height, removed_tools,divid,classification_type);\n    //change the legend opacity to keep track of hidden tools\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](legend_rect).style(\"opacity\", 0.2);\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"text#\" +divid+\"___\"+tool_id).style(\"opacity\", 0.2);\n  }\n\n};\n\nfunction get_square_quartiles(data, svg, xScale, yScale, div, removed_tools,better, divid, transform_to_table) {\n  \n  let tools_not_hidden = remove_hidden_tools(data, removed_tools);\n\n  // compute the quartiles over the new seet of data\n  let x_values = tools_not_hidden.map(a => a.x).sort(function(a, b){return a - b});\n  let y_values = tools_not_hidden.map(a => a.y).sort(function(a, b){return a - b});\n\n  let quantile_x = d3__WEBPACK_IMPORTED_MODULE_0__[\"quantile\"](x_values, 0.5);\n  let quantile_y = d3__WEBPACK_IMPORTED_MODULE_0__[\"quantile\"](y_values, 0.5);\n\n  let x_axis = xScale.domain();\n  let y_axis = yScale.domain();\n\n  let formatComma = d3__WEBPACK_IMPORTED_MODULE_0__[\"format\"](\",\");\n\n  svg.append(\"line\")\n    .attr(\"x1\", xScale(quantile_x))\n    .attr(\"y1\", yScale(y_axis[0]))\n    .attr(\"x2\", xScale(quantile_x))\n    .attr(\"y2\", yScale(y_axis[1]))\n    .attr(\"id\", function (d) { return divid+\"___x_quartile\";})\n    .attr(\"stroke\", \"#0A58A2\")\n    .attr(\"stroke-width\",3)\n    .style(\"stroke-dasharray\", (\"20, 5\"))\n    .style(\"opacity\", 0.4)\n    .on(\"mouseover\", function(d) {\t\n      div.transition()\t\t\n         .duration(100)\t\t\n         .style(\"opacity\", .9);\t\t\n      div.html(\"X quartile = \" + formatComma( quantile_x) )\t\n         .style(\"left\", (d3__WEBPACK_IMPORTED_MODULE_0__[\"event\"].pageX) + \"px\")\t\t\n         .style(\"top\", (d3__WEBPACK_IMPORTED_MODULE_0__[\"event\"].pageY) + \"px\");\n    })\t\t\t\t\t\n    .on(\"mouseout\", function(d) {\t\t\n      div.transition()\t\t\n         .duration(1000)\t\t\n         .style(\"opacity\", 0);\t\n    });\n\n  svg.append(\"line\")\n    .attr(\"x1\", xScale(x_axis[0]))\n    .attr(\"y1\", yScale(quantile_y))\n    .attr(\"x2\", xScale(x_axis[1]))\n    .attr(\"y2\", yScale(quantile_y))\n    .attr(\"id\", function (d) { return divid+\"___y_quartile\";})\n    .attr(\"stroke\", \"#0A58A2\")\n    .attr(\"stroke-width\",3)\n    .style(\"stroke-dasharray\", (\"20, 5\"))\n    .style(\"opacity\", 0.4)\n    .on(\"mouseover\", function(d) {\t\n      div.transition()\t\t\n         .duration(100)\t\t\n         .style(\"opacity\", .9);\t\t\n      div\t.html(\"Y quartile = \" + formatComma(quantile_y) )\t\n          .style(\"left\", (d3__WEBPACK_IMPORTED_MODULE_0__[\"event\"].pageX) + \"px\")\t\t\n          .style(\"top\", (d3__WEBPACK_IMPORTED_MODULE_0__[\"event\"].pageY) + \"px\");\n    })\t\t\t\t\t\n    .on(\"mouseout\", function(d) {\t\t\n      div.transition()\t\t\n         .duration(1500)\t\t\n         .style(\"opacity\", 0);\t\n    });\n\n    //the tranformation to tabular format is done only if there are any table elements in the html file\n    if (transform_to_table == true) {\n      transform_sqr_classif_to_table(better, tools_not_hidden, quantile_x, quantile_y, divid);\n    };\n    \n};\n\nfunction transform_sqr_classif_to_table(better, data, quantile_x, quantile_y, divid){\n  if (better == \"bottom-right\"){\n    data.forEach(function(element) {\n        if (element['x'] >= quantile_x && element['y'] <= quantile_y){\n              element['quartile'] = 1;\n        }else if (element['x'] >= quantile_x && element['y'] > quantile_y){\n              element['quartile'] = 3;\n        }else if (element['x'] < quantile_x && element['y'] > quantile_y){\n              element['quartile'] = 4;\n        }else if (element['x'] < quantile_x && element['y'] <= quantile_y){\n              element['quartile'] = 2;\n        }\n    });\n  } else if (better == \"top-right\"){\n      data.forEach(function(element) {\n        if (element['x'] >= quantile_x && element['y'] < quantile_y){\n              element['quartile'] = 3;\n        }else if (element['x'] >= quantile_x && element['y'] >= quantile_y){\n              element['quartile'] = 1;\n        }else if (element['x'] < quantile_x && element['y'] >= quantile_y){\n              element['quartile'] = 2;\n        }else if (element['x'] < quantile_x && element['y'] < quantile_y){\n              element['quartile'] = 4;\n        }\n      });\n  };\n\n  fill_in_table (divid, data);\n  set_cell_colors();\n\n};\n\n\nfunction append_quartile_numbers_to_plot (svg, xScale, yScale, better,divid){\n\n  let x_axis = xScale.domain();\n  let y_axis = yScale.domain();\n\n  let num_bottom_right,num_bottom_left,num_top_right,num_top_left;\n  // append quartile numbers to plot\n  if (better == \"bottom-right\"){\n     num_bottom_right = \"1\";\n     num_bottom_left = \"2\";\n     num_top_right = \"3\";\n     num_top_left = \"4\";\n  } \n  else if (better == \"top-right\"){\n     num_bottom_right = \"3\";\n     num_bottom_left = \"4\";\n     num_top_right = \"1\";\n     num_top_left = \"2\";\n  };\n\n  \n  svg.append(\"text\")\n  .attr(\"id\", function (d) { return divid+\"___num_bottom_right\";})\n  .attr(\"x\", xScale(x_axis[1]-(0.05*(x_axis[1]-x_axis[0]))))\n  .attr(\"y\", yScale(y_axis[1]-(0.97*(y_axis[1]-y_axis[0]))))\n  .style(\"opacity\", 0.4)\n  .style(\"font-size\", \"40px\")\n  .style(\"fill\", \"#0A58A2\")\n  .text(num_bottom_right);\n\n  svg.append(\"text\")\n  .attr(\"id\", function (d) { return divid+\"___num_bottom_left\";})\n  .attr(\"x\", xScale(x_axis[1]-(0.95*(x_axis[1]-x_axis[0]))))\n  .attr(\"y\", yScale(y_axis[1]-(0.97*(y_axis[1]-y_axis[0]))))\n  .style(\"opacity\", 0.4)\n  .style(\"font-size\", \"40px\")\n  .style(\"fill\", \"#0A58A2\")\n  .text(num_bottom_left);\n\n  svg.append(\"text\")\n  .attr(\"id\", function (d) { return divid+\"___num_top_right\";})\n  .attr(\"x\", xScale(x_axis[1]-(0.05*(x_axis[1]-x_axis[0]))))\n  .attr(\"y\", yScale(y_axis[1]-(0.1*(y_axis[1]-y_axis[0]))))\n  .style(\"opacity\", 0.4)\n  .style(\"font-size\", \"40px\")\n  .style(\"fill\", \"#0A58A2\")\n  .text(num_top_right);\n\n  svg.append(\"text\")\n  .attr(\"id\", function (d) { return divid+\"___num_top_left\";})\n  .attr(\"x\", xScale(x_axis[1]-(0.95*(x_axis[1]-x_axis[0]))))\n  .attr(\"y\", yScale(y_axis[1]-(0.1*(y_axis[1]-y_axis[0]))))\n  .style(\"opacity\", 0.4)\n  .style(\"font-size\", \"40px\")\n  .style(\"fill\", \"#0A58A2\")\n  .text(num_top_left);\n\n}\nfunction get_diagonal_quartiles(data, svg, xScale, yScale, div, width, height, removed_tools, better, divid, transform_to_table) {\n\n  let tools_not_hidden = remove_hidden_tools(data, removed_tools);\n\n  let x_values = tools_not_hidden.map(a => a.x);\n  let y_values = tools_not_hidden.map(a => a.y);\n\n  // get distance to lowest score corner\n\n  // normalize data to 0-1 range\n  let normalized_values = normalize_data(x_values, y_values);\n  let [x_norm, y_norm] = [normalized_values[0], normalized_values[1]];\n  \n  let max_x = Math.max.apply(null, x_values);\n  let max_y = Math.max.apply(null, y_values);\n\n  // # compute the scores for each of the tool. based on their distance to the x and y axis\n  let scores = []\n  let scores_coords = {}; //this object will store the scores and the coordinates\n  for (let i = 0; i < x_norm.length; i++) {\n\n    if (better == \"bottom-right\"){\n      scores.push(x_norm[i] + (1 - y_norm[i]));\n      scores_coords[x_norm[i] + (1 - y_norm[i])] =  [x_values[i], y_values[i]];\n      //append the score to the data array\n      tools_not_hidden[i]['score'] = x_norm[i] + (1 - y_norm[i]);\n    } \n    else if (better == \"top-right\"){\n      scores.push(x_norm[i] + y_norm[i]);\n      scores_coords[x_norm[i] + y_norm[i]] = [x_values[i], y_values[i]];\n      //append the score to the data array\n      tools_not_hidden[i]['score'] = x_norm[i] + y_norm[i];\n    };\n\n  };\n\n  // sort the scores and compute quartiles\n  scores.sort(function(a, b){return b-a});\n\n  let first_quartile = d3__WEBPACK_IMPORTED_MODULE_0__[\"quantile\"](scores, 0.25);\n  let second_quartile = d3__WEBPACK_IMPORTED_MODULE_0__[\"quantile\"](scores, 0.5);\n  let third_quartile = d3__WEBPACK_IMPORTED_MODULE_0__[\"quantile\"](scores, 0.75);\n\n  // compute the diagonal line coords\n  let coords = [get_diagonal_line(scores, scores_coords, first_quartile, better, max_x, max_y,svg, xScale, yScale), \n                get_diagonal_line(scores, scores_coords, second_quartile, better, max_x, max_y,svg, xScale, yScale), \n                get_diagonal_line(scores, scores_coords, third_quartile, better, max_x, max_y,svg, xScale, yScale)\n              ];\n  \n  // append the 3 lines to the svg\n  let index = 0;\n\n  coords.forEach(line => {\n    let [x_coords, y_coords] = [line[0], line[1]];\n    svg.append(\"line\")\n       .attr(\"clip-path\",\"url(#clip)\")\n       .attr(\"x1\", xScale(x_coords[0]))\n       .attr(\"y1\", yScale(y_coords[0]))\n       .attr(\"x2\", xScale(x_coords[1]))\n       .attr(\"y2\", yScale(y_coords[1]))  \n       .attr(\"id\", function (d) { return divid+\"___diag_quartile_\" + index;})\n       .attr(\"stroke\", \"#0A58A2\")\n       .attr(\"stroke-width\",3)\n       .style(\"stroke-dasharray\", (\"20, 5\"))\n       .style(\"opacity\", 0.4)\n\n    svg.append(\"clipPath\")\n       .attr(\"id\", \"clip\")\n       .append(\"rect\")\n       .attr(\"width\", width)\n       .attr(\"height\", height);\n\n    index += 1;\n  });\n\n  //the tranformation to tabular format is done only if there are any table elements in the html file\n  if (transform_to_table == true) {\n    transform_diag_classif_to_table(tools_not_hidden, first_quartile, second_quartile, third_quartile, divid);\n  };\n\n};\n\nfunction transform_diag_classif_to_table(data, first_quartile, second_quartile, third_quartile, divid){\n\n  data.forEach(function(element) {\n\n    if (element['score'] > first_quartile){\n          element['quartile'] = 1;\n    }else if ( element['score'] > second_quartile && element['score'] <= first_quartile){\n          element['quartile'] = 2;\n    }else if ( element['score'] > third_quartile && element['score'] <= second_quartile){\n          element['quartile'] = 3;\n    }else if (element['score'] <= third_quartile){\n          element['quartile'] = 4;\n    }\n  });\n\n  fill_in_table (divid, data);\n  set_cell_colors();\n\n};\n\nfunction normalize_data(x_values, y_values){\n\n  let maxX = Math.max.apply(null, x_values);\n  let maxY = Math.max.apply(null, y_values);\n  \n  let x_norm = x_values.map(function(e) {  \n    return e / maxX;\n  });\n\n  let y_norm = y_values.map(function(e) {  \n    return e / maxY;\n  });\n\n  return [x_norm, y_norm];\n};\n\nfunction get_diagonal_line(scores, scores_coords, quartile, better, max_x, max_y,svg, xScale, yScale){\n\n  let target;\n  for (let i = 0; i < scores.length; i++) {\n    // # find out which are the two points that contain the percentile value\n    \n    if (scores[i] <= quartile){\n        target = [[scores_coords[scores[i - 1]][0], scores_coords[scores[i - 1]][1]],\n                  [scores_coords[scores[i]][0], scores_coords[scores[i]][1]]];\n        break;\n    };\n  };\n  // # get the the mid point between the two, where the quartile line will pass\n  let half_point = [(target[0][0] + target[1][0]) / 2, (target[0][1] + target[1][1]) / 2];\n\n  // # draw the line depending on which is the optimal corner\n  let x_coords;\n  let y_coords;\n  if (better == \"bottom-right\"){\n       x_coords = [half_point[0] - max_x, half_point[0] + max_x];\n       y_coords = [half_point[1] - max_y, half_point[1] + max_y];\n  } else if (better == \"top-right\"){\n       x_coords = [half_point[0] + max_x, half_point[0] - max_x];\n       y_coords = [half_point[1] - max_y, half_point[1] + max_y];   \n  };\n\n  return [x_coords, y_coords];\n};\n\nfunction remove_hidden_tools(data, removed_tools){\n  // remove from the data array the participants that the user has hidden (removed_tools)\n  // create a new array where the tools that have not been hidden will be stored\n  let tools_not_hidden = [];\n  data.forEach(element => {\n    let index = jquery__WEBPACK_IMPORTED_MODULE_2___default.a.inArray(element.toolname, removed_tools);\n    if (index == -1){\n      tools_not_hidden.push(element);\n    }\n  });\n\n  return tools_not_hidden;\n\n};\n\nfunction fill_in_table (divid, data){\n  //create table dinamically\n  var table = document.getElementById(divid + \"_table\");\n  var row = table.insertRow(-1);\n  row.insertCell(0).innerHTML = \"<b>TOOL</b>\";\n  row.insertCell(1).innerHTML = \"<b>QUARTILE</b>\";\n\n  data.forEach(function(element) {\n    var row = table.insertRow(-1);\n    row.insertCell(0).innerHTML = element[\"toolname\"];\n    row.insertCell(1).innerHTML = element[\"quartile\"];\n  });\n\n};\n\nfunction set_cell_colors(){\n\n  var cell = jquery__WEBPACK_IMPORTED_MODULE_2___default()('td'); \n\n  cell.each(function() { //loop through all td elements ie the cells\n\n    var cell_value = jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).html(); //get the value\n\n    if (cell_value == 1) { //if then for if value is 1\n      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).css({'background' : '#238b45'});   // changes td to red.\n    } else if (cell_value == 2) {\n      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).css({'background' : '#74c476'}); \n    } else if (cell_value == 3) {\n      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).css({'background' : '#bae4b3'}); \n    } else if (cell_value == 4) {\n      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).css({'background' : '#edf8e9'}); \n    } else {\n      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).css({'background' : '#ffffff'});\n    };\n\n  });\n\n};\n\n\n\nloadurl();\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/app.js\n");
+eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadurl\", function() { return loadurl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"onQuartileChange\", function() { return onQuartileChange; });\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ \"./node_modules/d3/index.js\");\n/* harmony import */ var _app_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./app.css */ \"./src/app.css\");\n/* harmony import */ var _app_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_app_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var pareto_frontier__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! pareto-frontier */ \"./node_modules/pareto-frontier/index.js\");\n/* harmony import */ var pareto_frontier__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(pareto_frontier__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\n\n// ./node_modules/.bin/webpack-cli src/app.js --output=build/build.js -d -w\n\n\nlet MAIN_DATA = {};\n\n\nfunction loadurl(){\n    let divid;\n    \n    let charts = document.getElementsByClassName(\"benchmarkingChart\");\n     \n    let i = 0;\n    let dataId;\n    let y;\n    \n    // append ids to chart/s and make d3 plot\n    i = 0\n    for(y of charts){\n      // get benchmarking event id\n      dataId = y.getAttribute('data-id');\n      //set chart id\n      divid = (dataId+i).replace(\":\",\"_\");\n      y.id=divid;\n\n      // append buttons\n      let button1_id = divid + \"__none\";\n      let button2_id = divid + \"__squares\";\n      let button3_id = divid + \"__diagonals\";\n      \n      // append selection list tooltip container\n      d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"]('#'+divid).append(\"div\")\n        .attr(\"id\", \"tooltip_container\")\n\n      let select_list = d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"]('#'+divid).append(\"form\").append(\"select\")\n      .attr(\"class\",\"classificators_list\")\n      .attr(\"id\",divid + \"_dropdown_list\")\n      .append(\"optgroup\")\n      .attr(\"label\",\"Select a classification method:\");\n\n      select_list.append(\"option\")\n      .attr(\"class\", \"selection_option\")\n      .attr(\"id\", button1_id)\n      .attr(\"title\", \"Show only raw data\")\n      .attr(\"selected\",\"disabled\")\n      .attr(\"data-toggle\", \"list_tooltip\")\n      .attr(\"data-container\", \"#tooltip_container\") \n      .text(\"NO CLASSIFICATION\")\n      .on('click', function(d) {\n        onQuartileChange(this.id);\n      });\n      select_list.append(\"option\")\n      .attr(\"class\", \"selection_option\")\n      .attr(\"id\", button2_id)\n      .attr(\"title\", \"Apply square quartiles classification method (based on the 0.5 quartile of the X and Y metrics)\")\n      .attr(\"data-toggle\", \"list_tooltip\")\n      .attr(\"data-container\", \"#tooltip_container\") \n      .text(\"SQUARE QUARTILES\")\n      .on('click', function(d) {\n        onQuartileChange(this.id);\n      });\n      select_list.append(\"option\")\n      .attr(\"class\", \"selection_option\")\n      .attr(\"id\", button3_id)\n      .attr(\"title\", \"Apply diagonal quartiles classifcation method (based on the assignment of a score to each participant proceeding from its distance to the 'optimal performance' corner)\")\n      .attr(\"data-toggle\", \"list_tooltip\")\n      .attr(\"data-container\", \"#tooltip_container\") \n      .text(\"DIAGONAL QUARTILES\")\n      .on('click', function(d) {\n        onQuartileChange(this.id);\n      });\n     \n      let url = \"https://dev-openebench.bsc.es/api/scientific/Dataset/?query=\" + dataId + \"&fmt=json\";\n      get_data(url,divid); \n\n      // $('[data-toggle=\"list_tooltip\"]').tooltip();\n\n      //check the transformation to table attribute and append table to html\n      if (y.getAttribute('toTable') == \"true\"){\n        let table_id = divid + \"_table\";\n        var input = jquery__WEBPACK_IMPORTED_MODULE_2___default()('<br><br><table id=\"'+table_id+'\" data-id=\"'+dataId+'\" class=\"benchmarkingTable\"></table>');\n        jquery__WEBPACK_IMPORTED_MODULE_2___default()(\"#\" + divid).append(input);\n      };\n            \n      i++;\n    }\n        \n    \n       \n};\n\n\n\nfunction get_data(url,divid){\n\n  fetchUrl(url).then(results => {\n    join_all_json(results.Dataset,divid);\n  })\n\n};\n\nasync function fetchUrl(url) {\n\n  try {\n    let request = await fetch(url);\n    let result = await request.text();\n      return JSON.parse(result);\n    }\n    catch (err) {\n      console.log(`Invalid Url Error: ${err.stack} `);\n    }\n\n};\n\nfunction join_all_json(array,divid){\n  try{\n    let full_json  = [];\n    for (let i = 0; i < array.length; i++) {\n        let jo = {};\n        jo['toolname'] = array[i].name.split('.')[0];\n        jo['x'] = array[i].metrics[0].result.value;\n        jo['y'] = array[i].metrics[1].result.value;\n        jo['e'] = array[i].metrics[2].result.value;\n        full_json.push(jo);    \n    }\n\n    MAIN_DATA[divid] = full_json;\n    // by default, no classification method is applied. it is the first item in the selection list\n    var e = document.getElementById(divid + \"_dropdown_list\");\n    let classification_type = e.options[e.selectedIndex].id;\n\n    createChart(full_json,divid, classification_type);\n  }catch(err){\n    console.log(`Invalid Url Error: ${err.stack} `);\n  }\n\n    \n};\n\nfunction onQuartileChange(ID){  \n  \n  var chart_id = ID.split(\"__\")[0];\n  // console.log(d3.select('#'+'svg_'+chart_id));\n  d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"]('#'+'svg_'+chart_id).remove();\n  let classification_type = ID;\n  createChart(MAIN_DATA[chart_id],chart_id, classification_type);\n};\n\nfunction compute_classification(data, svg, xScale, yScale, div, width, height, removed_tools,divid, classification_type) {\n\n  let transform_to_table; //this variable is set to true if there are table elements with the corresponden divid in the html file\n  // every time a new classification is compute the previous results table is deleted (if it exists)\n  if (document.getElementById(divid + \"_table\") != null) {\n    document.getElementById(divid + \"_table\").innerHTML = '';\n    transform_to_table = true;\n  };\n\n  let better = \"top-right\";\n  if (classification_type == ( divid + \"__squares\")) {\n    draw_pareto(data, svg, xScale, yScale, div, width, height, removed_tools,divid, better);\n    get_square_quartiles(data, svg, xScale, yScale, div, removed_tools,better,divid, transform_to_table);\n    append_quartile_numbers_to_plot (svg, xScale, yScale, better,divid);\n  }  \n  else if (classification_type == (divid + \"__diagonals\")) {\n    draw_pareto(data, svg, xScale, yScale, div, width, height, removed_tools,divid, better);\n    get_diagonal_quartiles(data, svg, xScale, yScale, div, width, height, removed_tools, better,divid, transform_to_table);\n  } else {\n    draw_pareto(data, svg, xScale, yScale, div, width, height, removed_tools,divid, better);\n  }\n  \n};\n\nfunction compute_chart_height(data){\n\n  if (data.length%5 == 0){\n    return (40 + (20 * (Math.trunc(data.length/5))));\n  } else if (data.lenght%5 != 0) {\n    return (40 + (20 * (Math.trunc(data.length/5)+1)));\n  } \n  \n};\n\nfunction createChart (data,divid, classification_type){\n  // console.log(data)\n  let margin = {top: 20, right: 40, bottom: compute_chart_height(data), left: 40},\n    width = 1200 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n\n  let xScale = d3__WEBPACK_IMPORTED_MODULE_0__[\"scaleLinear\"]()\n    .range([0, width])\n    .domain([d3__WEBPACK_IMPORTED_MODULE_0__[\"min\"](data, function(d) { return d.x; }), d3__WEBPACK_IMPORTED_MODULE_0__[\"max\"](data, function(d) { return d.x; })]).nice();\n\n  let min_y = d3__WEBPACK_IMPORTED_MODULE_0__[\"min\"](data, function(d) { return d.y; });\n  let max_y = d3__WEBPACK_IMPORTED_MODULE_0__[\"max\"](data, function(d) { return d.y; });\n  let yScale = d3__WEBPACK_IMPORTED_MODULE_0__[\"scaleLinear\"]()\n    .range([height, 0])\n    .domain([min_y - 0.3*(max_y-min_y), max_y + 0.3*(max_y-min_y)]).nice();\n\n  let xAxis = d3__WEBPACK_IMPORTED_MODULE_0__[\"axisBottom\"](xScale).ticks(12),\n      yAxis = d3__WEBPACK_IMPORTED_MODULE_0__[\"axisLeft\"](yScale).ticks(12 * height / width);\n\n  let line = d3__WEBPACK_IMPORTED_MODULE_0__[\"line\"]()\n    .x(function(d) {\n      return xScale(d.x);\n    })\n    .y(function(d) {\n      return yScale(d.y);\n    });\n\n  // Define the div for the tooltip\n\n  let div = d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"]('#'+divid).append(\"div\").attr(\"class\", \"benchmark_tooltip\").style(\"opacity\", 0);\n\n  // append the svg element\n  // d3.select(\"svg\").remove()\n    // console.log(d3.select(\"svg\").remove());\n\n  let svg = d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"]('#'+divid).append(\"svg\")\n    .attr(\"class\", \"benchmarkingSVG\")\n    .attr('id','svg_'+divid)\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n  svg.append(\"g\").append(\"rect\").attr(\"width\", width).attr(\"height\", height).attr(\"class\", \"plot-bg\");\n\n  // Add Axis labels\n  svg.append(\"g\").attr(\"class\", \"axis axis--x\")\n    .attr(\"transform\", \"translate(\" + 0 + \",\" + height + \")\")\n    .call(xAxis);\n\n  svg.append(\"g\").attr(\"class\", \"axis axis--y\").call(yAxis);\n  \n  // add X and Y Gridlines\n  var gridlines_x = d3__WEBPACK_IMPORTED_MODULE_0__[\"axisBottom\"]()\n                    .ticks(12)\n                    .tickFormat(\"\")\n                    .tickSize(height)\n                    .scale(xScale);\n\n  var gridlines_y = d3__WEBPACK_IMPORTED_MODULE_0__[\"axisLeft\"]()\n                    .ticks(12 * height / width)\n                    .tickFormat(\"\")\n                    .tickSize(-width)\n                    .scale(yScale);\n\n  svg.append(\"g\")\n     .attr(\"class\", \"bench_grid\")\n     .call(gridlines_x);\n  \n     svg.append(\"g\")\n     .attr(\"class\", \"bench_grid\")\n     .call(gridlines_y);\n         \n  let removed_tools = []; // this array stores the tools when the user clicks on them\n\n   // setup fill color\n  let cValue_func = function(d) {\n    return d.toolname;\n  },\n  color_func = d3__WEBPACK_IMPORTED_MODULE_0__[\"scaleOrdinal\"](d3__WEBPACK_IMPORTED_MODULE_0__[\"schemeSet1\"].concat(d3__WEBPACK_IMPORTED_MODULE_0__[\"schemeSet3\"]));\n\n  append_dots_errobars (svg, data, xScale, yScale, div, cValue_func, color_func,divid);\n\n  draw_legend (data, svg, xScale, yScale, div, width, height, removed_tools, color_func, color_func.domain(), margin,divid,classification_type);\n\n    compute_classification(data, svg, xScale, yScale, div, width, height, removed_tools,divid, classification_type);\n\n};\n\nfunction append_dots_errobars (svg, data, xScale, yScale, div, cValue, color,divid){\n\n  // Add Error Line\n  svg.append(\"g\").selectAll(\"line\")\n      .data(data).enter()\n      .append(\"line\")\n      .attr(\"class\", \"error-line\")\n      .attr(\"id\", function (d) { return divid+\"___line\"+d.toolname.replace(/[\\. ()/-]/g, \"_\");})\n      .attr(\"x1\", function(d) {\n        return xScale(d.x);\n      })\n      .attr(\"y1\", function(d) {\n        return yScale(d.y + d.e);\n      })\n      .attr(\"x2\", function(d) {\n        return xScale(d.x);\n      })\n      .attr(\"y2\", function(d) {\n        return yScale(d.y - d.e);\n      });\n\n  // Add Error Top Cap\n  svg.append(\"g\").selectAll(\"line\")\n      .data(data).enter()\n      .append(\"line\")\n      .attr(\"id\", function (d) { return divid+\"___top\"+d.toolname.replace(/[\\. ()/-]/g, \"_\");})\n      .attr(\"class\", \"error-cap\")\n      .attr(\"x1\", function(d) {\n        return xScale(d.x) - 4;\n      })\n      .attr(\"y1\", function(d) {\n        return yScale(d.y + d.e);\n      })\n      .attr(\"x2\", function(d) {\n        return xScale(d.x) + 4;\n      })\n      .attr(\"y2\", function(d) {\n        return yScale(d.y + d.e);\n      });\n\n  // Add Error Bottom Cap\n  svg.append(\"g\").selectAll(\"line\")\n      .data(data).enter()\n      .append(\"line\")\n      .attr(\"id\", function (d) { return divid+\"___bottom\"+d.toolname.replace(/[\\. ()/-]/g, \"_\");})\n      .attr(\"class\", \"error-cap\")\n      .attr(\"x1\", function(d) {\n        return xScale(d.x) - 4;\n      })\n      .attr(\"y1\", function(d) {\n        return yScale(d.y - d.e);\n      })\n      .attr(\"x2\", function(d) {\n        return xScale(d.x) + 4;\n      })\n      .attr(\"y2\", function(d) {\n        return yScale(d.y - d.e);\n      });\n\n  // add dots\n  let symbol = d3__WEBPACK_IMPORTED_MODULE_0__[\"symbol\"]();\n\n  let formatComma = d3__WEBPACK_IMPORTED_MODULE_0__[\"format\"](\",\");\n  let formatDecimal = d3__WEBPACK_IMPORTED_MODULE_0__[\"format\"](\".4f\");\n\n  let dots =svg.selectAll(\".dots\")\n    .data(data)\n    .enter()\n    .append(\"path\")\n    .attr(\"class\", \"benchmark_path\");\n    \n  dots.attr(\"d\", symbol.type(function(){return d3__WEBPACK_IMPORTED_MODULE_0__[\"symbolSquare\"]}))\n      .attr(\"id\", function (d) {  return divid+\"___\"+d.toolname.replace(/[\\. ()/-]/g, \"_\");})\n      .attr(\"class\",\"line\")\n      .attr('transform',function(d){ return \"translate(\"+xScale(d.x)+\",\"+yScale(d.y)+\")\"; })\n      .attr(\"r\", 6)\n      .style(\"fill\", function(d) {\n        return color(cValue(d));\n      })\n      .on(\"mouseover\", function(d) {\n        // show tooltip only if the tool is visible\n        let ID = divid+\"___\"+d.toolname.replace(/[\\. ()/-]/g, \"_\");\n        if (d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+ID).style(\"opacity\") == 1) {\n          div.transition()\t\t\n              .duration(100)\t\t\n              .style(\"opacity\", .9);\t\t\n          div.html(d.toolname + \"<br/>\"  + formatComma(d.x) + \"<br/>\"  + formatDecimal(d.y))\t\n              .style(\"left\", (d3__WEBPACK_IMPORTED_MODULE_0__[\"event\"].pageX) + \"px\")\t\t\n              .style(\"top\", (d3__WEBPACK_IMPORTED_MODULE_0__[\"event\"].pageY) + \"px\");\n        }\n      })\t\t\t\t\t\n      .on(\"mouseout\", function(d) {\t\t\n        div.transition()\t\t\n          .duration(1500)\t\t\n          .style(\"opacity\", 0);\t\n      });\n    \n};\n\nfunction draw_legend (data, svg, xScale, yScale, div, width, height, removed_tools, color, color_domain, margin,divid,classification_type) {\n\n  //set number of elements per legend row\n  let n = 5;\n\n  let legend = svg.selectAll(\".legend\")\n    .data(color_domain)\n    .enter().append(\"g\")\n    .attr(\"class\", \"legend\")\n    .attr(\"transform\", function(d, i) { return \"translate(\" + (-width+i%n*200) + \",\" + (height + 40 + Math.floor(i/n) * 20) + \")\"; });\n  \n  // draw legend colored rectangles\n  legend.append(\"rect\")\n        .attr(\"x\", width + 18)\n        .attr(\"width\", 18)\n        .attr(\"height\", 18)\n        .style(\"fill\", color)\n        .on('click', function(d) {\n\n          let dot = d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"text#\" +divid+\"___\"+d.replace(/[\\. ()/-]/g, \"_\"));\n          let ID = dot._groups[0][0].id;\n\n          if(data.length-removed_tools.length-1 >= 4){\n\n            let legend_rect = this;\n            show_or_hide_participant_in_plot (ID, data, svg, xScale, yScale, div, width, height, removed_tools,divid,classification_type, legend_rect);\n\n          } else if (data.length-removed_tools.length-1 < 4 && (d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+ID).style(\"opacity\")) == 0){\n\n            let legend_rect = this;\n            show_or_hide_participant_in_plot (ID, data, svg, xScale, yScale, div, width, height, removed_tools,divid,classification_type, legend_rect);\n\n          } else {\n            \n            jquery__WEBPACK_IMPORTED_MODULE_2___default()('.removal_alert').remove();\n            var alert_msg = jquery__WEBPACK_IMPORTED_MODULE_2___default()('<div class=\"removal_alert\">\\\n                                <span class=\"closebtn\" onclick=\"(this.parentNode.remove());\">&times;</span>\\\n                                At least four participants are required for the benchmark!!\\\n                              </div>');\n            jquery__WEBPACK_IMPORTED_MODULE_2___default()(\"#\" + divid).append(alert_msg);\n\n            setTimeout(function(){\n              if (jquery__WEBPACK_IMPORTED_MODULE_2___default()('.removal_alert').length > 0) {\n                jquery__WEBPACK_IMPORTED_MODULE_2___default()('.removal_alert').remove();\n              }\n            }, 5000)\n\n          };\n\n        });\n\n  // draw legend text\n  legend.append(\"text\")\n        .attr(\"x\", width + 40)\n        .attr(\"y\", 9)\n        .attr(\"id\", function (d) { return divid+\"___\"+d.replace(/[\\. ()/-]/g, \"_\");})\n        .attr(\"dy\", \".35em\")\n        .style(\"text-anchor\", \"start\")\n        .text(function(d) {\n          return d;\n        });\n\n};\n\nfunction draw_pareto(data, svg, xScale, yScale, div, width, height, removed_tools,divid, better){\n\n  const points = [];\n\n  let tools_not_hidden = remove_hidden_tools(data, removed_tools);\n\n  tools_not_hidden.forEach(function(element) {\n    points.push([element['x'], element['y']])\n  });\n\n  let pf_coords;\n  let x_axis = xScale.domain();\n  let y_axis = yScale.domain();\n\n  if (better == \"bottom-right\"){\n    pf_coords = pareto_frontier__WEBPACK_IMPORTED_MODULE_3__[\"getParetoFrontier\"](points, { optimize: 'bottomRight'});\n    // append edges to pareto frontier\n    pf_coords.unshift ([pf_coords[0][0], y_axis[1]]);\n    pf_coords.push([x_axis[0], pf_coords[pf_coords.length -1 ][1]]);\n  } else if (better == \"top-right\"){\n    pf_coords = pareto_frontier__WEBPACK_IMPORTED_MODULE_3__[\"getParetoFrontier\"](points, { optimize: 'topRight'});\n    // append edges to pareto frontier\n    pf_coords.unshift ([pf_coords[0][0], y_axis[0]]);\n    pf_coords.push([x_axis[0], pf_coords[pf_coords.length -1 ][1]]);\n\n  }\n  \n  for (var i = 0; i < (pf_coords.length-1); i++) {\n    svg.append(\"line\")\n       .attr(\"clip-path\",\"url(#clip)\")\n       .attr(\"x1\", xScale(pf_coords[i][0]))\n       .attr(\"y1\", yScale(pf_coords[i][1]))\n       .attr(\"x2\", xScale(pf_coords[i+1][0]))\n       .attr(\"y2\", yScale(pf_coords[i+1][1]))  \n       .attr(\"id\", function (d) { return divid+\"___pareto\";})\n       .attr(\"stroke\", \"grey\")\n       .attr(\"stroke-width\",3)\n       .style(\"stroke-dasharray\", (\"20, 5\"))\n       .style(\"opacity\", 0.4)\n  };\n\n\n}\n\nfunction show_or_hide_participant_in_plot (ID, data, svg, xScale, yScale, div, width, height, removed_tools,divid,classification_type, legend_rect){\n\n   let tool_id =ID.split(\"___\")[1];\n  // remove the existing number and classification lines from plot (if any)\n  svg.selectAll(\"#\"+divid+\"___x_quartile\").remove();\n  svg.selectAll(\"#\"+divid+\"___y_quartile\").remove();\n  svg.selectAll(\"#\"+divid+\"___diag_quartile_0\").remove();\n  svg.selectAll(\"#\"+divid+\"___diag_quartile_1\").remove();\n  svg.selectAll(\"#\"+divid+\"___diag_quartile_2\").remove();\n  svg.selectAll(\"#\"+divid+\"___num_bottom_right\").remove();\n  svg.selectAll(\"#\"+divid+\"___num_top_right\").remove();\n  svg.selectAll(\"#\"+divid+\"___num_bottom_left\").remove();\n  svg.selectAll(\"#\"+divid+\"___num_top_left\").remove();\n  svg.selectAll(\"#\"+divid+\"___pareto\" ).remove();\n\n  let blockopacity = d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+ID).style(\"opacity\");\n  \n  // change the opacity to 0 or 1 depending on the current state\n  if (blockopacity == 0) {\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+ID).style(\"opacity\", 1);\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+divid+\"___top\"+tool_id).style(\"opacity\", 1);\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+divid+\"___bottom\"+tool_id).style(\"opacity\", 1);\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+divid+\"___line\"+tool_id).style(\"opacity\", 1);\n    // recalculate the quartiles after removing the tools\n    let index = jquery__WEBPACK_IMPORTED_MODULE_2___default.a.inArray(tool_id.replace(/_/g, \"-\"), removed_tools);\n    removed_tools.splice(index, 1);\n    compute_classification(data, svg, xScale, yScale, div, width, height, removed_tools,divid,classification_type);\n    //change the legend opacity to keep track of hidden tools\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](legend_rect).style(\"opacity\", 1);\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"text#\" +divid+\"___\"+tool_id).style(\"opacity\", 1);\n\n  } else {\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+ID).style(\"opacity\", 0);\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+divid+\"___top\"+tool_id).style(\"opacity\", 0);\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+divid+\"___bottom\"+tool_id).style(\"opacity\", 0);\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"#\"+divid+\"___line\"+tool_id).style(\"opacity\", 0);\n    removed_tools.push(tool_id.replace(/_/g, \"-\"));\n    compute_classification(data, svg, xScale, yScale, div, width, height, removed_tools,divid,classification_type);\n    //change the legend opacity to keep track of hidden tools\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](legend_rect).style(\"opacity\", 0.2);\n    d3__WEBPACK_IMPORTED_MODULE_0__[\"select\"](\"text#\" +divid+\"___\"+tool_id).style(\"opacity\", 0.2);\n  }\n\n};\n\nfunction get_square_quartiles(data, svg, xScale, yScale, div, removed_tools,better, divid, transform_to_table) {\n  \n  let tools_not_hidden = remove_hidden_tools(data, removed_tools);\n\n  // compute the quartiles over the new seet of data\n  let x_values = tools_not_hidden.map(a => a.x).sort(function(a, b){return a - b});\n  let y_values = tools_not_hidden.map(a => a.y).sort(function(a, b){return a - b});\n\n  let quantile_x = d3__WEBPACK_IMPORTED_MODULE_0__[\"quantile\"](x_values, 0.5);\n  let quantile_y = d3__WEBPACK_IMPORTED_MODULE_0__[\"quantile\"](y_values, 0.5);\n\n  let x_axis = xScale.domain();\n  let y_axis = yScale.domain();\n\n  let formatComma = d3__WEBPACK_IMPORTED_MODULE_0__[\"format\"](\",\");\n\n  svg.append(\"line\")\n    .attr(\"x1\", xScale(quantile_x))\n    .attr(\"y1\", yScale(y_axis[0]))\n    .attr(\"x2\", xScale(quantile_x))\n    .attr(\"y2\", yScale(y_axis[1]))\n    .attr(\"id\", function (d) { return divid+\"___x_quartile\";})\n    .attr(\"stroke\", \"#0A58A2\")\n    .attr(\"stroke-width\",3)\n    .style(\"stroke-dasharray\", (\"20, 5\"))\n    .style(\"opacity\", 0.4)\n    .on(\"mouseover\", function(d) {\t\n      div.transition()\t\t\n         .duration(100)\t\t\n         .style(\"opacity\", .9);\t\t\n      div.html(\"X quartile = \" + formatComma( quantile_x) )\t\n         .style(\"left\", (d3__WEBPACK_IMPORTED_MODULE_0__[\"event\"].pageX) + \"px\")\t\t\n         .style(\"top\", (d3__WEBPACK_IMPORTED_MODULE_0__[\"event\"].pageY) + \"px\");\n    })\t\t\t\t\t\n    .on(\"mouseout\", function(d) {\t\t\n      div.transition()\t\t\n         .duration(1000)\t\t\n         .style(\"opacity\", 0);\t\n    });\n\n  svg.append(\"line\")\n    .attr(\"x1\", xScale(x_axis[0]))\n    .attr(\"y1\", yScale(quantile_y))\n    .attr(\"x2\", xScale(x_axis[1]))\n    .attr(\"y2\", yScale(quantile_y))\n    .attr(\"id\", function (d) { return divid+\"___y_quartile\";})\n    .attr(\"stroke\", \"#0A58A2\")\n    .attr(\"stroke-width\",3)\n    .style(\"stroke-dasharray\", (\"20, 5\"))\n    .style(\"opacity\", 0.4)\n    .on(\"mouseover\", function(d) {\t\n      div.transition()\t\t\n         .duration(100)\t\t\n         .style(\"opacity\", .9);\t\t\n      div\t.html(\"Y quartile = \" + formatComma(quantile_y) )\t\n          .style(\"left\", (d3__WEBPACK_IMPORTED_MODULE_0__[\"event\"].pageX) + \"px\")\t\t\n          .style(\"top\", (d3__WEBPACK_IMPORTED_MODULE_0__[\"event\"].pageY) + \"px\");\n    })\t\t\t\t\t\n    .on(\"mouseout\", function(d) {\t\t\n      div.transition()\t\t\n         .duration(1500)\t\t\n         .style(\"opacity\", 0);\t\n    });\n\n    //the tranformation to tabular format is done only if there are any table elements in the html file\n    if (transform_to_table == true) {\n      transform_sqr_classif_to_table(better, tools_not_hidden, quantile_x, quantile_y, divid);\n    };\n    \n};\n\nfunction transform_sqr_classif_to_table(better, data, quantile_x, quantile_y, divid){\n  if (better == \"bottom-right\"){\n    data.forEach(function(element) {\n        if (element['x'] >= quantile_x && element['y'] <= quantile_y){\n              element['quartile'] = 1;\n        }else if (element['x'] >= quantile_x && element['y'] > quantile_y){\n              element['quartile'] = 3;\n        }else if (element['x'] < quantile_x && element['y'] > quantile_y){\n              element['quartile'] = 4;\n        }else if (element['x'] < quantile_x && element['y'] <= quantile_y){\n              element['quartile'] = 2;\n        }\n    });\n  } else if (better == \"top-right\"){\n      data.forEach(function(element) {\n        if (element['x'] >= quantile_x && element['y'] < quantile_y){\n              element['quartile'] = 3;\n        }else if (element['x'] >= quantile_x && element['y'] >= quantile_y){\n              element['quartile'] = 1;\n        }else if (element['x'] < quantile_x && element['y'] >= quantile_y){\n              element['quartile'] = 2;\n        }else if (element['x'] < quantile_x && element['y'] < quantile_y){\n              element['quartile'] = 4;\n        }\n      });\n  };\n\n  fill_in_table (divid, data);\n  set_cell_colors();\n\n};\n\n\nfunction append_quartile_numbers_to_plot (svg, xScale, yScale, better,divid){\n\n  let x_axis = xScale.domain();\n  let y_axis = yScale.domain();\n\n  let num_bottom_right,num_bottom_left,num_top_right,num_top_left;\n  // append quartile numbers to plot\n  if (better == \"bottom-right\"){\n     num_bottom_right = \"1\";\n     num_bottom_left = \"2\";\n     num_top_right = \"3\";\n     num_top_left = \"4\";\n  } \n  else if (better == \"top-right\"){\n     num_bottom_right = \"3\";\n     num_bottom_left = \"4\";\n     num_top_right = \"1\";\n     num_top_left = \"2\";\n  };\n\n  \n  svg.append(\"text\")\n  .attr(\"id\", function (d) { return divid+\"___num_bottom_right\";})\n  .attr(\"x\", xScale(x_axis[1]-(0.05*(x_axis[1]-x_axis[0]))))\n  .attr(\"y\", yScale(y_axis[1]-(0.97*(y_axis[1]-y_axis[0]))))\n  .style(\"opacity\", 0.4)\n  .style(\"font-size\", \"40px\")\n  .style(\"fill\", \"#0A58A2\")\n  .text(num_bottom_right);\n\n  svg.append(\"text\")\n  .attr(\"id\", function (d) { return divid+\"___num_bottom_left\";})\n  .attr(\"x\", xScale(x_axis[1]-(0.95*(x_axis[1]-x_axis[0]))))\n  .attr(\"y\", yScale(y_axis[1]-(0.97*(y_axis[1]-y_axis[0]))))\n  .style(\"opacity\", 0.4)\n  .style(\"font-size\", \"40px\")\n  .style(\"fill\", \"#0A58A2\")\n  .text(num_bottom_left);\n\n  svg.append(\"text\")\n  .attr(\"id\", function (d) { return divid+\"___num_top_right\";})\n  .attr(\"x\", xScale(x_axis[1]-(0.05*(x_axis[1]-x_axis[0]))))\n  .attr(\"y\", yScale(y_axis[1]-(0.1*(y_axis[1]-y_axis[0]))))\n  .style(\"opacity\", 0.4)\n  .style(\"font-size\", \"40px\")\n  .style(\"fill\", \"#0A58A2\")\n  .text(num_top_right);\n\n  svg.append(\"text\")\n  .attr(\"id\", function (d) { return divid+\"___num_top_left\";})\n  .attr(\"x\", xScale(x_axis[1]-(0.95*(x_axis[1]-x_axis[0]))))\n  .attr(\"y\", yScale(y_axis[1]-(0.1*(y_axis[1]-y_axis[0]))))\n  .style(\"opacity\", 0.4)\n  .style(\"font-size\", \"40px\")\n  .style(\"fill\", \"#0A58A2\")\n  .text(num_top_left);\n\n}\nfunction get_diagonal_quartiles(data, svg, xScale, yScale, div, width, height, removed_tools, better, divid, transform_to_table) {\n\n  let tools_not_hidden = remove_hidden_tools(data, removed_tools);\n\n  let x_values = tools_not_hidden.map(a => a.x);\n  let y_values = tools_not_hidden.map(a => a.y);\n\n  // get distance to lowest score corner\n\n  // normalize data to 0-1 range\n  let normalized_values = normalize_data(x_values, y_values);\n  let [x_norm, y_norm] = [normalized_values[0], normalized_values[1]];\n  \n  let max_x = Math.max.apply(null, x_values);\n  let max_y = Math.max.apply(null, y_values);\n\n  // # compute the scores for each of the tool. based on their distance to the x and y axis\n  let scores = []\n  let scores_coords = {}; //this object will store the scores and the coordinates\n  for (let i = 0; i < x_norm.length; i++) {\n\n    if (better == \"bottom-right\"){\n      scores.push(x_norm[i] + (1 - y_norm[i]));\n      scores_coords[x_norm[i] + (1 - y_norm[i])] =  [x_values[i], y_values[i]];\n      //append the score to the data array\n      tools_not_hidden[i]['score'] = x_norm[i] + (1 - y_norm[i]);\n    } \n    else if (better == \"top-right\"){\n      scores.push(x_norm[i] + y_norm[i]);\n      scores_coords[x_norm[i] + y_norm[i]] = [x_values[i], y_values[i]];\n      //append the score to the data array\n      tools_not_hidden[i]['score'] = x_norm[i] + y_norm[i];\n    };\n\n  };\n\n  // sort the scores and compute quartiles\n  scores.sort(function(a, b){return b-a});\n\n  let first_quartile = d3__WEBPACK_IMPORTED_MODULE_0__[\"quantile\"](scores, 0.25);\n  let second_quartile = d3__WEBPACK_IMPORTED_MODULE_0__[\"quantile\"](scores, 0.5);\n  let third_quartile = d3__WEBPACK_IMPORTED_MODULE_0__[\"quantile\"](scores, 0.75);\n\n  // compute the diagonal line coords\n  let coords = [get_diagonal_line(scores, scores_coords, first_quartile, better, max_x, max_y,svg, xScale, yScale), \n                get_diagonal_line(scores, scores_coords, second_quartile, better, max_x, max_y,svg, xScale, yScale), \n                get_diagonal_line(scores, scores_coords, third_quartile, better, max_x, max_y,svg, xScale, yScale)\n              ];\n  \n  // append the 3 lines to the svg\n  let index = 0;\n\n  coords.forEach(line => {\n    let [x_coords, y_coords] = [line[0], line[1]];\n    svg.append(\"line\")\n       .attr(\"clip-path\",\"url(#clip)\")\n       .attr(\"x1\", xScale(x_coords[0]))\n       .attr(\"y1\", yScale(y_coords[0]))\n       .attr(\"x2\", xScale(x_coords[1]))\n       .attr(\"y2\", yScale(y_coords[1]))  \n       .attr(\"id\", function (d) { return divid+\"___diag_quartile_\" + index;})\n       .attr(\"stroke\", \"#0A58A2\")\n       .attr(\"stroke-width\",3)\n       .style(\"stroke-dasharray\", (\"20, 5\"))\n       .style(\"opacity\", 0.4)\n\n    // svg.append(\"text\")\n    // .attr(\"x\", xScale(0.56))\n    // .attr(\"y\", yScale(0.86))\n    // .style(\"opacity\", 0.4)\n    // .style(\"font-size\", \"40px\")\n    // .style(\"fill\", \"#0A58A2\")\n    // .text(\"num\");\n\n    svg.append(\"clipPath\")\n       .attr(\"id\", \"clip\")\n       .append(\"rect\")\n       .attr(\"width\", width)\n       .attr(\"height\", height);\n\n    index += 1;\n  });\n\n  //the tranformation to tabular format is done only if there are any table elements in the html file\n  if (transform_to_table == true) {\n    transform_diag_classif_to_table(tools_not_hidden, first_quartile, second_quartile, third_quartile, divid);\n  };\n\n};\n\nfunction transform_diag_classif_to_table(data, first_quartile, second_quartile, third_quartile, divid){\n\n  data.forEach(function(element) {\n\n    if (element['score'] > first_quartile){\n          element['quartile'] = 1;\n    }else if ( element['score'] > second_quartile && element['score'] <= first_quartile){\n          element['quartile'] = 2;\n    }else if ( element['score'] > third_quartile && element['score'] <= second_quartile){\n          element['quartile'] = 3;\n    }else if (element['score'] <= third_quartile){\n          element['quartile'] = 4;\n    }\n  });\n\n  fill_in_table (divid, data);\n  set_cell_colors();\n\n};\n\nfunction normalize_data(x_values, y_values){\n\n  let maxX = Math.max.apply(null, x_values);\n  let maxY = Math.max.apply(null, y_values);\n  \n  let x_norm = x_values.map(function(e) {  \n    return e / maxX;\n  });\n\n  let y_norm = y_values.map(function(e) {  \n    return e / maxY;\n  });\n\n  return [x_norm, y_norm];\n};\n\nfunction get_diagonal_line(scores, scores_coords, quartile, better, max_x, max_y,svg, xScale, yScale){\n\n  let target;\n  for (let i = 0; i < scores.length; i++) {\n    // # find out which are the two points that contain the percentile value\n    \n    if (scores[i] <= quartile){\n        target = [[scores_coords[scores[i - 1]][0], scores_coords[scores[i - 1]][1]],\n                  [scores_coords[scores[i]][0], scores_coords[scores[i]][1]]];\n        break;\n    };\n  };\n  // # get the the mid point between the two, where the quartile line will pass\n  let half_point = [(target[0][0] + target[1][0]) / 2, (target[0][1] + target[1][1]) / 2];\n\n  // # draw the line depending on which is the optimal corner\n  let x_coords;\n  let y_coords;\n  if (better == \"bottom-right\"){\n       x_coords = [half_point[0] - max_x, half_point[0] + max_x];\n       y_coords = [half_point[1] - max_y, half_point[1] + max_y];\n  } else if (better == \"top-right\"){\n       x_coords = [half_point[0] + max_x, half_point[0] - max_x];\n       y_coords = [half_point[1] - max_y, half_point[1] + max_y];   \n  };\n\n  return [x_coords, y_coords];\n};\n\nfunction remove_hidden_tools(data, removed_tools){\n  // remove from the data array the participants that the user has hidden (removed_tools)\n  // create a new array where the tools that have not been hidden will be stored\n  let tools_not_hidden = [];\n  data.forEach(element => {\n    let index = jquery__WEBPACK_IMPORTED_MODULE_2___default.a.inArray(element.toolname, removed_tools);\n    if (index == -1){\n      tools_not_hidden.push(element);\n    }\n  });\n\n  return tools_not_hidden;\n\n};\n\nfunction fill_in_table (divid, data){\n  //create table dinamically\n  var table = document.getElementById(divid + \"_table\");\n  var row = table.insertRow(-1);\n  row.insertCell(0).innerHTML = \"<b>TOOL</b>\";\n  row.insertCell(1).innerHTML = \"<b>QUARTILE</b>\";\n\n  data.forEach(function(element) {\n    var row = table.insertRow(-1);\n    row.insertCell(0).innerHTML = element[\"toolname\"];\n    row.insertCell(1).innerHTML = element[\"quartile\"];\n  });\n\n};\n\nfunction set_cell_colors(){\n\n  var cell = jquery__WEBPACK_IMPORTED_MODULE_2___default()('td'); \n\n  cell.each(function() { //loop through all td elements ie the cells\n\n    var cell_value = jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).html(); //get the value\n\n    if (cell_value == 1) { //if then for if value is 1\n      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).css({'background' : '#238b45'});   // changes td to red.\n    } else if (cell_value == 2) {\n      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).css({'background' : '#74c476'}); \n    } else if (cell_value == 3) {\n      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).css({'background' : '#bae4b3'}); \n    } else if (cell_value == 4) {\n      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).css({'background' : '#edf8e9'}); \n    } else {\n      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).css({'background' : '#ffffff'});\n    };\n\n  });\n\n};\n\n\n\nloadurl();\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/app.js\n");
 
 /***/ })
 
diff --git a/index.html b/index.html
index c1598b7..677d494 100644
--- a/index.html
+++ b/index.html
@@ -9,7 +9,7 @@
     </head>
 
     <body>
-
+        
         <div style= "float:left" data-id="QfO4_TreeFam-A" toTable="true" class="benchmarkingChart" ></div>
 
         </body>
diff --git a/package-lock.json b/package-lock.json
index 2c26b72..f5b9847 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -3326,6 +3326,12 @@
         "readable-stream": "^2.1.5"
       }
     },
+    "pareto-frontier": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/pareto-frontier/-/pareto-frontier-1.1.1.tgz",
+      "integrity": "sha1-iwV5n15sDAIy5IlLFvC0ScFpilQ=",
+      "dev": true
+    },
     "parse-asn1": {
       "version": "5.1.1",
       "resolved": "https://registry.npmjs.org/parse-asn1/-/parse-asn1-5.1.1.tgz",
diff --git a/package.json b/package.json
index 2a2a7ee..0779dcf 100644
--- a/package.json
+++ b/package.json
@@ -7,6 +7,7 @@
   "devDependencies": {
     "d3": "^5.5.0",
     "jquery": "^3.3.1",
+    "pareto-frontier": "^1.1.1",
     "css-loader": "^1.0.0",
     "style-loader": "^0.21.0",
     "webpack-cli": "^3.0.8",
diff --git a/src/app.css b/src/app.css
index fbbaca7..7a7112b 100644
--- a/src/app.css
+++ b/src/app.css
@@ -84,6 +84,15 @@
         float: right;
     }
 
+    @media only screen and (max-width: 1400px) {
+
+        .benchmarkingChart{
+            /* float: left; */
+            width: 90vw;
+        }
+    }   
+
+
     /* .benchmarkingChart{
 
         -webkit-transform:scale(0.5);
diff --git a/src/app.js b/src/app.js
index 7cc5f80..622c0e1 100644
--- a/src/app.js
+++ b/src/app.js
@@ -1,6 +1,7 @@
 import * as d3 from 'd3';
 import './app.css';
 import $ from "jquery";
+import * as pf from 'pareto-frontier';
 
 
 // ./node_modules/.bin/webpack-cli src/app.js --output=build/build.js -d -w
@@ -159,14 +160,18 @@ function compute_classification(data, svg, xScale, yScale, div, width, height, r
     transform_to_table = true;
   };
 
-  let better = "bottom-right";
+  let better = "top-right";
   if (classification_type == ( divid + "__squares")) {
+    draw_pareto(data, svg, xScale, yScale, div, width, height, removed_tools,divid, better);
     get_square_quartiles(data, svg, xScale, yScale, div, removed_tools,better,divid, transform_to_table);
     append_quartile_numbers_to_plot (svg, xScale, yScale, better,divid);
   }  
   else if (classification_type == (divid + "__diagonals")) {
+    draw_pareto(data, svg, xScale, yScale, div, width, height, removed_tools,divid, better);
     get_diagonal_quartiles(data, svg, xScale, yScale, div, width, height, removed_tools, better,divid, transform_to_table);
-  } 
+  } else {
+    draw_pareto(data, svg, xScale, yScale, div, width, height, removed_tools,divid, better);
+  }
   
 };
 
@@ -266,7 +271,7 @@ function createChart (data,divid, classification_type){
 
   draw_legend (data, svg, xScale, yScale, div, width, height, removed_tools, color_func, color_func.domain(), margin,divid,classification_type);
 
-  compute_classification(data, svg, xScale, yScale, div, width, height, removed_tools,divid, classification_type);
+    compute_classification(data, svg, xScale, yScale, div, width, height, removed_tools,divid, classification_type);
 
 };
 
@@ -433,6 +438,50 @@ function draw_legend (data, svg, xScale, yScale, div, width, height, removed_too
 
 };
 
+function draw_pareto(data, svg, xScale, yScale, div, width, height, removed_tools,divid, better){
+
+  const points = [];
+
+  let tools_not_hidden = remove_hidden_tools(data, removed_tools);
+
+  tools_not_hidden.forEach(function(element) {
+    points.push([element['x'], element['y']])
+  });
+
+  let pf_coords;
+  let x_axis = xScale.domain();
+  let y_axis = yScale.domain();
+
+  if (better == "bottom-right"){
+    pf_coords = pf.getParetoFrontier(points, { optimize: 'bottomRight'});
+    // append edges to pareto frontier
+    pf_coords.unshift ([pf_coords[0][0], y_axis[1]]);
+    pf_coords.push([x_axis[0], pf_coords[pf_coords.length -1 ][1]]);
+  } else if (better == "top-right"){
+    pf_coords = pf.getParetoFrontier(points, { optimize: 'topRight'});
+    // append edges to pareto frontier
+    pf_coords.unshift ([pf_coords[0][0], y_axis[0]]);
+    pf_coords.push([x_axis[0], pf_coords[pf_coords.length -1 ][1]]);
+
+  }
+  
+  for (var i = 0; i < (pf_coords.length-1); i++) {
+    svg.append("line")
+       .attr("clip-path","url(#clip)")
+       .attr("x1", xScale(pf_coords[i][0]))
+       .attr("y1", yScale(pf_coords[i][1]))
+       .attr("x2", xScale(pf_coords[i+1][0]))
+       .attr("y2", yScale(pf_coords[i+1][1]))  
+       .attr("id", function (d) { return divid+"___pareto";})
+       .attr("stroke", "grey")
+       .attr("stroke-width",3)
+       .style("stroke-dasharray", ("20, 5"))
+       .style("opacity", 0.4)
+  };
+
+
+}
+
 function show_or_hide_participant_in_plot (ID, data, svg, xScale, yScale, div, width, height, removed_tools,divid,classification_type, legend_rect){
 
    let tool_id =ID.split("___")[1];
@@ -446,7 +495,7 @@ function show_or_hide_participant_in_plot (ID, data, svg, xScale, yScale, div, w
   svg.selectAll("#"+divid+"___num_top_right").remove();
   svg.selectAll("#"+divid+"___num_bottom_left").remove();
   svg.selectAll("#"+divid+"___num_top_left").remove();
-  
+  svg.selectAll("#"+divid+"___pareto" ).remove();
 
   let blockopacity = d3.select("#"+ID).style("opacity");
   
@@ -706,6 +755,14 @@ function get_diagonal_quartiles(data, svg, xScale, yScale, div, width, height, r
        .style("stroke-dasharray", ("20, 5"))
        .style("opacity", 0.4)
 
+    // svg.append("text")
+    // .attr("x", xScale(0.56))
+    // .attr("y", yScale(0.86))
+    // .style("opacity", 0.4)
+    // .style("font-size", "40px")
+    // .style("fill", "#0A58A2")
+    // .text("num");
+
     svg.append("clipPath")
        .attr("id", "clip")
        .append("rect")
